-- Script was generated by Devart dbForge Studio for MySQL, Version 5.0.48.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 10/14/2011 7:49:25 PM
-- Server version: 5.1.50-community
-- Client version: 4.1

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

--
-- Definition for database osae
--
DROP DATABASE IF EXISTS osae;
CREATE DATABASE osae
	CHARACTER SET latin1
	COLLATE latin1_swedish_ci;

-- 
-- Set default database
--
USE osae;

--
-- Definition for table osae_debug_log
--
CREATE TABLE osae_debug_log (
  log_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  log_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  entry VARCHAR(255) NOT NULL,
  debug_trace VARCHAR(2000) DEFAULT NULL,
  PRIMARY KEY (log_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 3984196
AVG_ROW_LENGTH = 2730
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object_pattern
--
CREATE TABLE osae_object_pattern (
  object_pattern_id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  object_id INT(10) UNSIGNED DEFAULT NULL,
  pattern_id INT(10) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (object_pattern_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object_type
--
CREATE TABLE osae_object_type (
  object_type_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  object_type VARCHAR(100) NOT NULL,
  object_type_description VARCHAR(200) DEFAULT NULL,
  plugin_object_id INT(10) UNSIGNED ZEROFILL DEFAULT NULL,
  system_hidden TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  object_type_owner TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  base_type_id INT(10) UNSIGNED ZEROFILL DEFAULT NULL,
  container TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  hide_redundant_events TINYINT(1) UNSIGNED NOT NULL DEFAULT 1,
  PRIMARY KEY (object_type_id),
  UNIQUE INDEX osae_object_types_unq_type (object_type)
)
ENGINE = INNODB
AUTO_INCREMENT = 91
AVG_ROW_LENGTH = 327
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_pattern
--
CREATE TABLE osae_pattern (
  pattern_id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  pattern VARCHAR(400) DEFAULT NULL,
  script TEXT DEFAULT NULL,
  PRIMARY KEY (pattern_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 19
AVG_ROW_LENGTH = 910
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_pattern_match
--
CREATE TABLE osae_pattern_match (
  match_id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  pattern_id INT(10) UNSIGNED NOT NULL,
  `match` VARCHAR(400) NOT NULL,
  PRIMARY KEY (match_id)
)
ENGINE = INNODB
AUTO_INCREMENT = 54
AVG_ROW_LENGTH = 327
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object_type_event
--
CREATE TABLE osae_object_type_event (
  event_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  event_name VARCHAR(200) NOT NULL,
  event_label VARCHAR(200) DEFAULT NULL,
  object_type_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  PRIMARY KEY (event_id),
  INDEX osae_fk_events_to_object_type (object_type_id),
  UNIQUE INDEX osae_object_type_events_unq (event_name, object_type_id),
  CONSTRAINT osae_fk_events_to_object_type FOREIGN KEY (object_type_id)
    REFERENCES osae_object_type(object_type_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 117
AVG_ROW_LENGTH = 230
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object_type_method
--
CREATE TABLE osae_object_type_method (
  method_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  method_name VARCHAR(200) DEFAULT NULL,
  method_label VARCHAR(200) NOT NULL,
  object_type_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  param_1_label VARCHAR(100) DEFAULT NULL,
  param_2_label VARCHAR(200) DEFAULT NULL,
  param_1_default VARCHAR(512) DEFAULT NULL,
  param_2_default VARCHAR(512) DEFAULT NULL,
  PRIMARY KEY (method_id),
  INDEX osae_fk_methods_to_object_type (object_type_id),
  UNIQUE INDEX osae_object_type_methods_unq (method_name, object_type_id),
  CONSTRAINT osae_fk_methods_to_object_type FOREIGN KEY (object_type_id)
    REFERENCES osae_object_type(object_type_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 141
AVG_ROW_LENGTH = 192
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object_type_property
--
CREATE TABLE osae_object_type_property (
  property_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  property_name VARCHAR(200) NOT NULL,
  property_datatype VARCHAR(50) NOT NULL,
  property_default VARCHAR(255) DEFAULT NULL,
  object_type_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  track_history TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (property_id),
  INDEX oase_fk_properties_to_object_type (object_type_id),
  UNIQUE INDEX osae_object_type_properties_unq (property_name, object_type_id),
  CONSTRAINT oase_fk_properties_to_object_type FOREIGN KEY (object_type_id)
    REFERENCES osae_object_type(object_type_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 621
AVG_ROW_LENGTH = 56
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object_type_state
--
CREATE TABLE osae_object_type_state (
  state_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  state_name VARCHAR(20) NOT NULL,
  state_label VARCHAR(50) DEFAULT NULL,
  object_type_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  PRIMARY KEY (state_id),
  INDEX osae_fk_states_to_object_type (object_type_id),
  UNIQUE INDEX osae_object_type_states_unq (state_name, object_type_id),
  CONSTRAINT osae_fk_states_to_object_type FOREIGN KEY (object_type_id)
    REFERENCES osae_object_type(object_type_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 113
AVG_ROW_LENGTH = 240
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object
--
CREATE TABLE osae_object (
  object_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  object_name VARCHAR(100) NOT NULL,
  object_description VARCHAR(200) DEFAULT NULL,
  state_id INT(10) UNSIGNED ZEROFILL DEFAULT NULL,
  object_type_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  object_value VARCHAR(50) DEFAULT NULL,
  address VARCHAR(300) DEFAULT NULL,
  container_id INT(10) UNSIGNED ZEROFILL DEFAULT NULL,
  enabled TINYINT(1) UNSIGNED DEFAULT 1,
  last_updated DATETIME DEFAULT NULL,
  last_state_change DATETIME DEFAULT NULL,
  PRIMARY KEY (object_id),
  INDEX osae_fk_objects_to_container (container_id),
  INDEX osae_fk_objects_to_object_types (object_type_id),
  INDEX osae_fk_objects_to_type_state (state_id),
  UNIQUE INDEX osae_object_unq (object_name),
  CONSTRAINT osae_fk_objects_to_container FOREIGN KEY (container_id)
    REFERENCES osae_object(object_id) ON DELETE SET NULL ON UPDATE SET NULL,
  CONSTRAINT osae_fk_objects_to_object_types FOREIGN KEY (object_type_id)
    REFERENCES osae_object_type(object_type_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_objects_to_type_state FOREIGN KEY (state_id)
    REFERENCES osae_object_type_state(state_id) ON DELETE SET NULL ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 1113
AVG_ROW_LENGTH = 2730
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_event_log
--
CREATE TABLE osae_event_log (
  event_log_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  object_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  event_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  log_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  from_object_id INT(10) UNSIGNED DEFAULT NULL,
  debug_trace VARCHAR(2000) DEFAULT NULL,
  PRIMARY KEY (event_log_id),
  INDEX osae_fk_events_log_to_events (event_id),
  INDEX osae_fk_events_log_to_objects (object_id),
  CONSTRAINT osae_fk_events_log_to_events FOREIGN KEY (event_id)
    REFERENCES osae_object_type_event(event_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_events_log_to_objects FOREIGN KEY (object_id)
    REFERENCES osae_object(object_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 278084
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_method_log
--
CREATE TABLE osae_method_log (
  method_log_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  entry_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  object_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  method_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  parameter_1 VARCHAR(1024) DEFAULT NULL,
  parameter_2 VARCHAR(1024) DEFAULT NULL,
  from_object_id INT(10) UNSIGNED DEFAULT NULL,
  debug_trace VARCHAR(2000) DEFAULT NULL,
  PRIMARY KEY (method_log_id),
  INDEX osae_method_log_index02 (method_id),
  INDEX osae_method_log_index03 (object_id),
  CONSTRAINT osae_fk_method_log_to_method FOREIGN KEY (method_id)
    REFERENCES osae_object_type_method(method_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_method_log_to_object FOREIGN KEY (object_id)
    REFERENCES osae_object(object_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 6
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_method_queue
--
CREATE TABLE osae_method_queue (
  method_queue_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  entry_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  object_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  method_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  parameter_1 VARCHAR(1024) DEFAULT NULL,
  parameter_2 VARCHAR(1024) DEFAULT NULL,
  from_object_id INT(10) UNSIGNED DEFAULT NULL,
  debug_trace VARCHAR(2000) DEFAULT NULL,
  PRIMARY KEY (method_queue_id),
  INDEX osae_fk_methods_queue_to_methods (method_id),
  INDEX osae_fk_methods_queue_to_objects (object_id),
  CONSTRAINT osae_fk_methods_queue_to_methods FOREIGN KEY (method_id)
    REFERENCES osae_object_type_method(method_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_methods_queue_to_objects FOREIGN KEY (object_id)
    REFERENCES osae_object(object_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 6
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object_event_script
--
CREATE TABLE osae_object_event_script (
  event_script_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  object_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  event_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  event_script TEXT NOT NULL,
  PRIMARY KEY (event_script_id),
  INDEX osae_fk_object_script_to_events (event_id),
  INDEX osae_fk_object_script_to_object (object_id),
  UNIQUE INDEX osae_object_event_script_unq (object_id, event_id),
  CONSTRAINT osae_fk_object_script_to_events FOREIGN KEY (event_id)
    REFERENCES osae_object_type_event(event_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_object_script_to_object FOREIGN KEY (object_id)
    REFERENCES osae_object(object_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 24
AVG_ROW_LENGTH = 4096
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object_property
--
CREATE TABLE osae_object_property (
  object_property_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  object_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  object_type_property_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  property_value VARCHAR(255) DEFAULT NULL,
  last_updated DATETIME DEFAULT NULL,
  PRIMARY KEY (object_property_id),
  INDEX osae_fk_object_property_to_object_type (object_type_property_id),
  UNIQUE INDEX osae_object_property_index_unq (object_id, object_type_property_id),
  CONSTRAINT osae_fk_object_property_to_object FOREIGN KEY (object_id)
    REFERENCES osae_object(object_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_object_property_to_object_type FOREIGN KEY (object_type_property_id)
    REFERENCES osae_object_type_property(property_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 2608
AVG_ROW_LENGTH = 399
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object_state_history
--
CREATE TABLE osae_object_state_history (
  object_id INT(10) UNSIGNED NOT NULL,
  state_id INT(10) UNSIGNED NOT NULL,
  times_this_hour INT(10) UNSIGNED NOT NULL DEFAULT 0,
  times_this_day INT(10) UNSIGNED NOT NULL DEFAULT 0,
  times_this_month INT(10) UNSIGNED NOT NULL DEFAULT 0,
  times_this_year INT(10) UNSIGNED NOT NULL DEFAULT 0,
  times_ever INT(10) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (object_id, state_id),
  INDEX osae_fk_object_state_to_state (state_id),
  CONSTRAINT osae_fk_object_state_to_object FOREIGN KEY (object_id)
    REFERENCES osae_object(object_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_object_state_to_state FOREIGN KEY (state_id)
    REFERENCES osae_object_type_state(state_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AVG_ROW_LENGTH = 4096
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_schedule_queue
--
CREATE TABLE osae_schedule_queue (
  schedule_id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  queue_datetime DATETIME DEFAULT NULL,
  object_id INT(10) UNSIGNED DEFAULT NULL,
  method_id INT(10) UNSIGNED DEFAULT NULL,
  parameter_1 VARCHAR(200) DEFAULT NULL,
  parameter_2 VARCHAR(200) DEFAULT NULL,
  recurring_id INT(10) UNSIGNED DEFAULT NULL,
  pattern_id INT(10) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (schedule_id),
  INDEX osae_fk_schedule_pattern_to_pattern_id (pattern_id),
  INDEX schedule_queue_Index02 (method_id),
  INDEX schedule_queue_Index03 (object_id),
  INDEX schedule_queue_Index04 (recurring_id),
  CONSTRAINT osae_fk_schedule_method_to_method_id FOREIGN KEY (method_id)
    REFERENCES osae_object_type_method(method_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_schedule_object_to_object FOREIGN KEY (object_id)
    REFERENCES osae_object(object_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_schedule_pattern_to_pattern_id FOREIGN KEY (pattern_id)
    REFERENCES osae_pattern(pattern_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_schedule_recurring
--
CREATE TABLE osae_schedule_recurring (
  recurring_id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  object_id INT(10) UNSIGNED DEFAULT NULL,
  method_id INT(10) UNSIGNED DEFAULT NULL,
  parameter_1 VARCHAR(200) DEFAULT NULL,
  parameter_2 VARCHAR(200) DEFAULT NULL,
  recurring_time TIME NOT NULL DEFAULT '00:00:01',
  monday TINYINT(1) UNSIGNED DEFAULT NULL,
  tuesday TINYINT(1) UNSIGNED DEFAULT NULL,
  wednesday TINYINT(1) UNSIGNED DEFAULT NULL,
  thursday TINYINT(1) UNSIGNED DEFAULT NULL,
  friday TINYINT(1) UNSIGNED DEFAULT NULL,
  saturday TINYINT(1) UNSIGNED DEFAULT NULL,
  sunday TINYINT(1) UNSIGNED DEFAULT NULL,
  interval_unit CHAR(1) NOT NULL DEFAULT 'W',
  recurring_minutes INT(8) UNSIGNED DEFAULT NULL,
  recurring_day INT(4) UNSIGNED DEFAULT NULL,
  recurring_date DATE DEFAULT NULL,
  pattern_id INT(10) UNSIGNED DEFAULT NULL,
  schedule_name VARCHAR(100) DEFAULT NULL,
  PRIMARY KEY (recurring_id),
  INDEX osa_fk_recurring_object_to_object_id (object_id),
  INDEX osae_fk_recurring_method_to_method_id (method_id),
  INDEX osae_fk_recurring_pattern_to_pattern_id (pattern_id),
  UNIQUE INDEX osae_schedule_recurring_unq (schedule_name),
  CONSTRAINT osa_fk_recurring_object_to_object_id FOREIGN KEY (object_id)
    REFERENCES osae_object(object_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_recurring_method_to_method_id FOREIGN KEY (method_id)
    REFERENCES osae_object_type_method(method_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_recurring_pattern_to_pattern_id FOREIGN KEY (pattern_id)
    REFERENCES osae_pattern(pattern_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_screen_object
--
CREATE TABLE osae_screen_object (
  screen_object_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  screen_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  object_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  control_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  PRIMARY KEY (screen_object_id),
  INDEX osae_fk_screen_object_to_object (object_id),
  INDEX osae_fk_screen_object_to_object_type (control_id),
  INDEX osae_fk_screen_screen_to_object (screen_id),
  CONSTRAINT osae_fk_screen_control_to_object FOREIGN KEY (control_id)
    REFERENCES osae_object(object_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_screen_object_to_object FOREIGN KEY (object_id)
    REFERENCES osae_object(object_id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT osae_fk_screen_screen_to_object FOREIGN KEY (screen_id)
    REFERENCES osae_object(object_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 16
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object_property_array
--
CREATE TABLE osae_object_property_array (
  property_array_id INT(10) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT,
  object_property_id INT(10) UNSIGNED ZEROFILL NOT NULL,
  item_name VARCHAR(2000) NOT NULL,
  item_label VARCHAR(400) DEFAULT NULL,
  PRIMARY KEY (property_array_id),
  INDEX osae_fk_property_array_to_object_property (object_property_id),
  CONSTRAINT osae_fk_property_array_to_object_property FOREIGN KEY (object_property_id)
    REFERENCES osae_object_property(object_property_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 285
AVG_ROW_LENGTH = 134
CHARACTER SET utf8
COLLATE utf8_general_ci;

--
-- Definition for table osae_object_property_history
--
CREATE TABLE osae_object_property_history (
  history_id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  history_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  object_property_id INT(10) UNSIGNED NOT NULL,
  property_value VARCHAR(4000) NOT NULL,
  PRIMARY KEY (history_id),
  INDEX osae_fk_object_property_history_to_object_property (object_property_id),
  CONSTRAINT osae_fk_object_property_history_to_object_property FOREIGN KEY (object_property_id)
    REFERENCES osae_object_property(object_property_id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_general_ci;

DELIMITER $$

--
-- Definition for procedure osae_object_name_get_by_address
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_object_name_get_by_address(IN paddress VARCHAR(400))
BEGIN
  SELECT object_name
  FROM
    osae_object
  WHERE
    address = paddress;
END
$$

--
-- Definition for procedure osae_sp_debug_log_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_debug_log_add(IN pentry      VARCHAR(200),
                                       IN pdebugtrace VARCHAR(200)
                                       )
BEGIN
  IF isnull(pentry) = FALSE THEN
    INSERT INTO osae_debug_log (entry, debug_trace) VALUES (pentry, pdebugtrace);
  END IF;
END
$$

--
-- Definition for procedure osae_sp_event_log_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_event_log_add(IN pobject     VARCHAR(200),
                                       IN pevent      VARCHAR(200),
                                       IN pfromobject VARCHAR(200),
                                       IN pdebuginfo  VARCHAR(1000)
                                       )
BEGIN
  DECLARE vObjectCount     INT;
  DECLARE vObjectID        INT;
  DECLARE vObjectTypeID    INT;
  DECLARE vEventCount      INT;
  DECLARE vEventID         INT;
  DECLARE vFromObjectID    INT DEFAULT NULL;
  DECLARE vFromObjectCount INT;
  DECLARE vDebugTrace      VARCHAR(2000);

  SET vDebugTrace = concat(coalesce(pdebuginfo, ''), ' -> osae_sp_event_log_add');
  SET vFromObjectID = (SELECT object_id
                       FROM
                         osae_object
                       WHERE
                         upper(object_name) = upper(pfromobject));
  SELECT count(object_id)
  INTO
    vObjectCount
  FROM
    osae_object
  WHERE
    upper(object_name) = upper(pobject);
  IF vObjectCount > 0 THEN
    SELECT object_id
         , object_type_id
    INTO
      vObjectID, vObjectTypeID
    FROM
      osae_object
    WHERE
      upper(object_name) = upper(pobject);
    SELECT count(event_id)
    INTO
      vEventCount
    FROM
      osae_object_type_event
    WHERE
      object_type_id = vObjectTypeID
      AND upper(event_name) = upper(pevent);
    IF vEventCount = 1 THEN
      CALL osae_sp_debug_log_add(concat('Event_Log_add (', pobject, ' ', pevent, ') ', pfromobject, ' vFromObjectID ', coalesce(vFromObjectID, 'NULL')), vDebugTrace);
      SELECT event_id
      INTO
        vEventID
      FROM
        osae_object_type_event
      WHERE
        object_type_id = vObjectTypeID
        AND upper(event_name) = upper(pevent);
      INSERT INTO osae_event_log (object_id, event_id, from_object_id, debug_trace) VALUES (vObjectID, vEventID, vFromObjectID, vDebugTrace);
    END IF;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_event_log_clear
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_event_log_clear()
BEGIN
  DELETE
  FROM
    osae_event_log;
  DELETE
  FROM
    osae_debug_log;
  DELETE
  FROM
    osae_method_log;
END
$$

--
-- Definition for procedure osae_sp_method_queue_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_method_queue_add(IN pobject     VARCHAR(200),
                                          IN pmethod     VARCHAR(200),
                                          IN pparameter1 VARCHAR(1024),
                                          IN pparameter2 VARCHAR(1024),
                                          IN pfromobject VARCHAR(200),
                                          IN pdebuginfo  VARCHAR(1000)
                                          )
BEGIN
  DECLARE vObjectCount     INT;
  DECLARE vObjectID        INT;
  DECLARE vObjectTypeID    INT;
  DECLARE vMethodCount     INT;
  DECLARE vMethodID        INT;
  DECLARE vSystemCount     INT;
  DECLARE vObjectName      VARCHAR(200);
  DECLARE vObjectType      VARCHAR(200);
  DECLARE vBaseType        VARCHAR(200);
  DECLARE vFromObjectID    INT DEFAULT NULL;
  DECLARE vFromObjectCount INT;
  DECLARE vStateCount      INT;
  DECLARE vDebugTrace      VARCHAR(1000);
  DECLARE vPropertyCount   INT;
  DECLARE vMethod          VARCHAR(200);

  SET max_sp_recursion_depth = 10;
  SET vDebugTrace = concat(pdebuginfo, ' -> osae_sp_method_queue_add');
  SET vFromObjectID = (SELECT object_id
                       INTO
                         vFromObjectID
                       FROM
                         osae_object
                       WHERE
                         upper(object_name) = upper(pfromobject));
  SELECT count(object_id)
  INTO
    vObjectCount
  FROM
    osae_object
  WHERE
    upper(object_name) = upper(pobject);
  IF vObjectCount = 1 THEN
    SELECT object_id
         , object_type_id
    INTO
      vObjectID, vObjectTypeID
    FROM
      osae_object
    WHERE
      upper(object_name) = upper(pobject);
    SELECT count(method_id)
    INTO
      vMethodCount
    FROM
      osae_object_type_method
    WHERE
      object_type_id = vObjectTypeID
      AND (upper(method_name) = upper(pmethod)
      OR upper(method_label) = upper(pmethod));
    IF vMethodCount > 0 THEN
      SELECT method_id
      INTO
        vMethodID
      FROM
        osae_object_type_method
      WHERE
        object_type_id = vObjectTypeID
        AND (upper(method_name) = upper(pmethod)
        OR upper(method_label) = upper(pmethod));
      # Check to see if an app owns this, or SYSTEM, if system owns we will have to handle events....
      SELECT count(object_id)
      INTO
        vSystemCount
      FROM
        osae_v_object
      WHERE
        object_id = vObjectID
        AND owned_by = 'SYSTEM';
      IF vSystemCount = 1 THEN
        SELECT object_name
             , object_type
             , base_type
        INTO
          vObjectName, vObjectType, vBaseType
        FROM
          osae_v_object
        WHERE
          object_id = vObjectID;
        SELECT method_name
        INTO
          vMethod
        FROM
          osae_object_type_method
        WHERE
          method_id = vMethodID;
        # Here is the magic, if the Method Name matches a State, then the Method's Job is to Set that State, so look up the state
        SELECT count(state_name)
        INTO
          vStateCount
        FROM
          osae_v_object_type_state
        WHERE
          upper(state_name) = upper(vMethod)
          AND object_type = vObjectType;
        IF vStateCount = 1 THEN
          CALL osae_sp_object_state_set(vObjectName, vMethod, pfromobject, vDebugTrace);
        ELSE
          SELECT count(property_name)
          INTO
            vPropertyCount
          FROM
            osae_v_object_type_property
          WHERE
            upper(property_name) = upper(vMethod)
            AND object_type = vObjectType;
          IF vPropertyCount = 1 THEN
            CALL osae_sp_object_property_set(vObjectName, vMethod, pparameter1, pfromobject, vDebugTrace);
          END IF;
        END IF;
      ELSE
        INSERT INTO osae_method_queue (object_id, method_id, parameter_1, parameter_2, from_object_id, debug_trace) VALUES (vObjectID, vMethodID, pparameter1, pparameter2, vFromObjectID, vDebugTrace);
      END IF;
    END IF;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_method_queue_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_method_queue_delete(IN pmethodid INT)
BEGIN
  DELETE
  FROM
    osae_method_queue
  WHERE
    method_queue_id = pmethodid;
END
$$

--
-- Definition for procedure osae_sp_object_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_add(IN pname        VARCHAR(200),
                                    IN pdescription VARCHAR(200),
                                    IN pobjecttype  VARCHAR(200),
                                    IN paddress     VARCHAR(200),
                                    IN pcontainer   VARCHAR(200),
                                    IN penabled     TINYINT(1)
                                    )
BEGIN
  DECLARE vObjectCount     INT;
  DECLARE vObjectTypeCount INT;
  DECLARE iContainer       INT;
  DECLARE iObjectID        INT;
  DECLARE vObjectTypeID    INT;
  DECLARE vContainerCount  INT;
  DECLARE vContainerID     INT DEFAULT NULL;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
         , container
    INTO
      vObjectTypeID, iContainer
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    SELECT count(object_id)
    INTO
      vContainerCount
    FROM
      osae_v_object
    WHERE
      object_name = pcontainer
      AND container = 1;
    IF vContainerCount = 1 THEN
      SELECT object_id
      INTO
        vContainerID
      FROM
        osae_v_object
      WHERE
        object_name = pcontainer
        AND container = 1;
    END IF;
    SELECT count(object_id)
    INTO
      vObjectCount
    FROM
      osae_object
    WHERE
      upper(object_name) = upper(pname)
      OR (upper(address) = upper(paddress)
      AND address IS NOT NULL
      AND address <> '');
    IF vObjectCount = 0 THEN
      INSERT INTO osae_object (object_name, object_description, object_type_id, address, container_id, enabled) VALUES (pname, pdescription, vObjectTypeID, paddress, vContainerID, penabled);
    ELSE
      CALL osae_sp_debug_log_add(concat('Object_Add Failed to Add ', pname, ' due to duplicate data.'), 'SYSTEM');
    END IF;
    IF iContainer = 1 THEN
      SELECT object_id
      INTO
        iObjectID
      FROM
        osae_object
      WHERE
        object_name = pname;
      UPDATE osae_object
      SET
        container_id = iObjectID
      WHERE
        object_id = iObjectID;
    END IF;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_delete(IN pname VARCHAR(200))
BEGIN
  DELETE
  FROM
    osae_object
  WHERE
    object_name = pname;
END
$$

--
-- Definition for procedure osae_sp_object_event_script_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_event_script_add(IN pobject VARCHAR(200),
                                                 IN pevent  VARCHAR(200),
                                                 IN ptext   TEXT
                                                 )
BEGIN
  DECLARE vObjectCount  INT;
  DECLARE vObjectID     INT;
  DECLARE vObjectTypeID INT;
  DECLARE vEventCount   INT;
  DECLARE vEventID      INT;

  SELECT count(object_id)
  INTO
    vObjectCount
  FROM
    osae_object
  WHERE
    object_name = pobject;
  IF vObjectCount > 0 THEN
    SELECT object_id
         , object_type_id
    INTO
      vObjectID, vObjectTypeID
    FROM
      osae_object
    WHERE
      object_name = pobject;
    SELECT count(event_id)
    INTO
      vEventCount
    FROM
      osae_object_type_event
    WHERE
      object_type_id = vObjectTypeID
      AND (event_name = pevent
      OR event_label = pevent);
    IF vEventCount = 1 THEN
      SELECT event_id
      INTO
        vEventID
      FROM
        osae_object_type_event
      WHERE
        object_type_id = vObjectTypeID
        AND (event_name = pevent
        OR event_label = pevent);
      INSERT INTO osae_object_event_script (object_id, event_id, event_script) VALUES (vObjectID, vEventID, ptext);
    END IF;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_event_script_update
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_event_script_update(IN pobject VARCHAR(200),
                                                    IN pevent  VARCHAR(200),
                                                    IN ptext   TEXT
                                                    )
BEGIN
  DECLARE vObjectCount  INT;
  DECLARE vObjectID     INT;
  DECLARE vObjectTypeID INT;
  DECLARE vEventCount   INT;
  DECLARE vEventID      INT;

  SELECT count(object_id)
  INTO
    vObjectCount
  FROM
    osae_object
  WHERE
    object_name = pobject;
  IF vObjectCount > 0 THEN
    SELECT object_id
         , object_type_id
    INTO
      vObjectID, vObjectTypeID
    FROM
      osae_object
    WHERE
      object_name = pobject;
    SELECT count(event_id)
    INTO
      vEventCount
    FROM
      osae_object_type_event
    WHERE
      object_type_id = vObjectTypeID
      AND (event_name = pevent
      OR event_label = pevent);
    IF vEventCount = 1 THEN
      SELECT event_id
      INTO
        vEventID
      FROM
        osae_object_type_event
      WHERE
        object_type_id = vObjectTypeID
        AND (event_name = pevent
        OR event_label = pevent);
      UPDATE osae_object_event_script
      SET
        event_script = ptext
      WHERE
        object_id = vObjectID
        AND event_id = vEventID;
    END IF;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_property_array_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_property_array_add(IN pobject   VARCHAR(200),
                                                   IN pproperty VARCHAR(200),
                                                   IN pvalue    VARCHAR(1000),
                                                   IN plabel    VARCHAR(200)
                                                   )
BEGIN
  DECLARE vObjectID         INT;
  DECLARE vObjectTypeID     INT;
  DECLARE vObjectPropertyID INT;

  SELECT object_property_id
  INTO
    vObjectPropertyID
  FROM
    osae_v_object_property
  WHERE
    upper(object_name) = upper(pobject)
    AND upper(property_name) = upper(pproperty);
  IF vObjectPropertyID IS NOT NULL THEN
    INSERT INTO osae_object_property_array (object_property_id, item_name, item_label) VALUES (vObjectPropertyID, pvalue, plabel);
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_property_array_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_property_array_delete(IN pobject   VARCHAR(400),
                                                      IN pproperty VARCHAR(400),
                                                      IN pvalue    VARCHAR(2000)
                                                      )
BEGIN
  DECLARE vPropertyArrayID INT;

  SELECT property_array_id
  INTO
    vPropertyArrayID
  FROM
    osae_v_object_property_array
  WHERE
    object_name = pobject
    AND property_name = pproperty
    AND item_name = pvalue;
  DELETE
  FROM
    osae_object_property_array
  WHERE
    object_property_array_id = vPropertyArrayID;
END
$$

--
-- Definition for procedure osae_sp_object_property_array_delete_all
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_property_array_delete_all(IN pobject   VARCHAR(400),
                                                          IN pproperty VARCHAR(400)
                                                          )
BEGIN
  DECLARE vPropertyID INT;

  SELECT object_property_id
  INTO
    vPropertyID
  FROM
    osae_v_object_property
  WHERE
    object_name = pobject
    AND property_name = pproperty;
  DELETE
  FROM
    osae_object_property_array
  WHERE
    object_property_id = vPropertyID;
END
$$

--
-- Definition for procedure osae_sp_object_property_array_get_all
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_property_array_get_all(IN pobject   VARCHAR(255),
                                                       IN pproperty VARCHAR(255)
                                                       )
BEGIN
  SELECT item_name
  FROM
    osae_v_object_property_array
  WHERE
    object_name = pobject
    AND property_name = pproperty;
END
$$

--
-- Definition for procedure osae_sp_object_property_array_get_random
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_property_array_get_random(IN pobject   VARCHAR(200),
                                                          IN pproperty VARCHAR(200)
                                                          )
BEGIN
  SELECT item_name
  FROM
    osae_v_object_property_array
  WHERE
    object_name = pobject
    AND property_name = pproperty
  ORDER BY
    rand()
  LIMIT
    1;
END
$$

--
-- Definition for procedure osae_sp_object_property_array_update
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_property_array_update(IN pobject   VARCHAR(200),
                                                      IN pproperty VARCHAR(200),
                                                      IN poldvalue VARCHAR(2000),
                                                      IN pnewvalue VARCHAR(2000),
                                                      IN pnewlabel VARCHAR(200)
                                                      )
BEGIN
  DECLARE vObjectID         INT;
  DECLARE vObjectTypeID     INT;
  DECLARE vObjectPropertyID INT;

  SELECT object_property_id
  INTO
    vObjectPropertyID
  FROM
    osae_v_object_property
  WHERE
    upper(object_name) = upper(pobject)
    AND upper(property_name) = upper(pproperty);
  IF vObjectPropertyID IS NOT NULL THEN
    UPDATE osae_object_property_array
    SET
      item_name = pnewvalue, item_label = pnewlabel
    WHERE
      object_property_id = vObjectPropertyID
      AND item_name = poldvalue;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_property_get
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_property_get(IN pname     VARCHAR(200),
                                             IN pproperty VARCHAR(200)
                                             )
BEGIN
  SELECT property_value
  FROM
    osae_v_object_property
  WHERE
    object_name = pname
    AND property_name = pproperty;
END
$$

--
-- Definition for procedure osae_sp_object_property_set
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_property_set(IN pname       VARCHAR(200),
                                             IN pproperty   VARCHAR(200),
                                             IN pvalue      VARCHAR(255),
                                             IN pfromobject VARCHAR(200),
                                             IN pdebuginfo  VARCHAR(2000)
                                             )
BEGIN
  DECLARE vObjectID      INT DEFAULT 0;
  DECLARE vObjectCount   INT DEFAULT 0;
  DECLARE vObjectTypeID  INT DEFAULT 0;
  DECLARE vPropertyID    INT DEFAULT 0;
  DECLARE vPropertyValue VARCHAR(2000);
  DECLARE vPropertyCount INT DEFAULT 0;
  DECLARE vEventCount    INT;
  DECLARE vDebugTrace    VARCHAR(2000) DEFAULT '';

  SET vDebugTrace = concat(pdebuginfo, ' -> osae_sp_object_property_set');
  SELECT count(object_id)
  INTO
    vObjectCount
  FROM
    osae_object
  WHERE
    upper(object_name) = upper(pname);
  IF vObjectCount > 0 THEN
    SELECT object_id
         , object_type_id
    INTO
      vObjectID, vObjectTypeID
    FROM
      osae_object
    WHERE
      upper(object_name) = upper(pname);
    SELECT count(property_id)
    INTO
      vPropertyCount
    FROM
      osae_v_object_property
    WHERE
      upper(object_name) = upper(pname)
      AND upper(property_name) = upper(pproperty)
      AND (property_value IS NULL
      OR property_value != pvalue);
    IF vPropertyCount > 0 THEN
      SELECT property_id
           , coalesce(property_value, '')
      INTO
        vPropertyID, vPropertyValue
      FROM
        osae_v_object_property
      WHERE
        upper(object_name) = upper(pname)
        AND upper(property_name) = upper(pproperty)
        AND (property_value IS NULL
        OR property_value != pvalue);
      UPDATE osae_object_property
      SET
        property_value = pvalue
      WHERE
        object_id = vObjectID
        AND object_type_property_id = vPropertyID;
      UPDATE osae_object
      SET
        last_updated = now()
      WHERE
        object_id = vObjectID;
      SELECT count(event_id)
      INTO
        vEventCount
      FROM
        osae_object_type_event
      WHERE
        object_type_id = vObjectTypeID
        AND upper(event_name) = upper(pproperty);
      IF vEventCount > 0 THEN
        CALL osae_sp_event_log_add(pname, pproperty, pfromobject, vDebugTrace);
      END IF;
    END IF;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_state_set
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_state_set(IN pname       VARCHAR(200),
                                          IN pstate      VARCHAR(50),
                                          IN pfromobject VARCHAR(200),
                                          IN pdebuginfo  VARCHAR(2000)
                                          )
BEGIN
  DECLARE vObjectCount         INT;
  DECLARE vObjectID            INT;
  DECLARE vObjectTypeID        INT;
  DECLARE vStateCount          INT;
  DECLARE vOldStateID          INT;
  DECLARE vStateID             INT;
  DECLARE vEventCount          INT;
  DECLARE vHideRedundantEvents INT;
  DECLARE vDebugTrace          VARCHAR(2000) DEFAULT '';

  SET vDebugTrace = concat(pdebuginfo, ' -> osae_sp_object_state_set');
  SELECT count(object_id)
  INTO
    vObjectCount
  FROM
    osae_object
  WHERE
    upper(object_name) = upper(pname);
  IF vObjectCount = 1 THEN
    SELECT object_id
         , object_type_id
         , state_id
    INTO
      vObjectID, vObjectTypeID, vOldStateID
    FROM
      osae_object
    WHERE
      upper(object_name) = upper(pname)
    LIMIT
      1;
    SELECT count(state_id)
    INTO
      vStateCount
    FROM
      osae_object_type_state
    WHERE
      object_type_id = vObjectTypeID
      AND (upper(state_name) = upper(pstate)
      OR upper(state_label) = upper(pstate));
    IF vStateCount = 1 THEN
      SELECT state_id
      INTO
        vStateID
      FROM
        osae_object_type_state
      WHERE
        object_type_id = vObjectTypeID
        AND (upper(state_name) = upper(pstate)
        OR upper(state_label) = upper(pstate))
      LIMIT
        1;
      UPDATE osae_object
      SET
        state_id = vStateID, last_updated = now()
      WHERE
        object_id = vObjectID;
      SELECT count(event_id)
      INTO
        vEventCount
      FROM
        osae_v_object_type_event
      WHERE
        object_type_id = vObjectTypeID
        AND upper(event_name) = upper(pstate)
      LIMIT
        1;
      IF vEventCount = 1 THEN
        SELECT hide_redundant_events
        INTO
          vHideRedundantEvents
        FROM
          osae_v_object_type_event
        WHERE
          object_type_id = vObjectTypeID
          AND upper(event_name) = upper(pstate)
        LIMIT
          1;
        IF vOldStateID <> vStateID OR vHideRedundantEvents = 0 THEN
          CALL osae_sp_event_log_add(pname, pstate, pfromobject, vDebugTrace);
        END IF;
      END IF;
    END IF;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_state_set_by_address
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_state_set_by_address(IN paddress    VARCHAR(400),
                                                     IN pstate      VARCHAR(50),
                                                     IN pfromobject VARCHAR(200),
                                                     IN pdebuginfo  VARCHAR(2000)
                                                     )
BEGIN
  DECLARE vObjectCount         INT;
  DECLARE vObjectID            INT;
  DECLARE vObjectTypeID        INT;
  DECLARE vStateCount          INT;
  DECLARE vOldStateID          INT;
  DECLARE vStateID             INT;
  DECLARE vEventCount          INT;
  DECLARE vHideRedundantEvents INT;
  DECLARE vDebugTrace          VARCHAR(2000) DEFAULT '';

  SET vDebugTrace = concat(pdebuginfo, ' -> osae_sp_object_state_set');
  SELECT count(object_id)
  INTO
    vObjectCount
  FROM
    osae_object
  WHERE
    upper(address) = upper(paddress);
  IF vObjectCount = 1 THEN
    SELECT object_id
         , object_type_id
         , state_id
    INTO
      vObjectID, vObjectTypeID, vOldStateID
    FROM
      osae_object
    WHERE
      upper(address) = upper(paddress)
      AND paddress != ''
    LIMIT
      1;
    SELECT count(state_id)
    INTO
      vStateCount
    FROM
      osae_object_type_state
    WHERE
      object_type_id = vObjectTypeID
      AND (upper(state_name) = upper(pstate)
      OR upper(state_label) = upper(pstate));
    IF vStateCount = 1 THEN
      SELECT state_id
      INTO
        vStateID
      FROM
        osae_object_type_state
      WHERE
        object_type_id = vObjectTypeID
        AND (upper(state_name) = upper(pstate)
        OR upper(state_label) = upper(pstate))
      LIMIT
        1;
      UPDATE osae_object
      SET
        state_id = vStateID, last_updated = now()
      WHERE
        object_id = vObjectID;
      SELECT count(event_id)
           , hide_redundant_events
      INTO
        vEventCount, vHideRedundantEvents
      FROM
        osae_v_object_type_event
      WHERE
        object_type_id = vObjectTypeID
        AND upper(event_name) = upper(pstate)
      LIMIT
        1;
      IF vOldStateID <> vStateID OR vHideRedundantEvents = 0 THEN
        IF vEventCount = 1 THEN
          CALL osae_sp_event_log_add(pname, pstate, pfromobject, vDebugTrace);
        END IF;
      END IF;
    END IF;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_add(IN pname                VARCHAR(200),
                                         IN pdesc                VARCHAR(200),
                                         IN pownedby             VARCHAR(200),
                                         IN pbasetype            VARCHAR(200),
                                         IN ptypeowner           TINYINT,
                                         IN psystem              TINYINT,
                                         IN pcontainer           TINYINT,
                                         IN phideredundantevents TINYINT
                                         )
BEGIN
  DECLARE vOwnerTypeCount INT;
  DECLARE vOwnerTypeID    INT DEFAULT NULL;
  DECLARE vBaseTypeCount  INT;
  DECLARE vBaseTypeID     INT DEFAULT NULL;

  SELECT count(object_name)
  INTO
    vOwnerTypeCount
  FROM
    osae_v_object
  WHERE
    object_name = pownedby;
  IF vOwnerTypeCount > 0 THEN
    SELECT object_id
    INTO
      vOwnerTypeID
    FROM
      osae_v_object
    WHERE
      object_name = pownedby;
  END IF;
  SELECT count(object_type)
  INTO
    vBaseTypeCount
  FROM
    osae_v_object_type
  WHERE
    object_type = pbasetype;
  IF vBaseTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vBaseTypeID
    FROM
      osae_v_object_type
    WHERE
      object_type = pbasetype;
  END IF;
  INSERT INTO osae_object_type (object_type, object_type_description, plugin_object_id, base_type_id, system_hidden, object_type_owner, container, hide_redundant_events) VALUES (upper(pname), pdesc, vOwnerTypeID, vBaseTypeID, psystem, ptypeowner, pcontainer, phideredundantevents)
  ON DUPLICATE KEY UPDATE
    object_type_description = pdesc, plugin_object_id = vOwnerTypeID, base_type_id = vBaseTypeID, system_hidden = psystem, object_type_owner = ptypeowner, container = pcontainer, hide_redundant_events = phideredundantevents;
  IF vBaseTypeCount = 0 THEN
    SELECT object_type_id
    INTO
      vBaseTypeID
    FROM
      osae_object_type
    WHERE
      object_type = upper(pname);
    UPDATE osae_object_type
    SET
      base_type_id = vBaseTypeID
    WHERE
      object_type_id = vBaseTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_clone
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_clone(IN pnewname  VARCHAR(200),
                                           IN pbasename VARCHAR(200)
                                           )
BEGIN
  DECLARE vBaseTypeID INT;
  DECLARE vNewTypeID  INT;

  SELECT object_type_id
  INTO
    vBaseTypeID
  FROM
    osae_v_object_type
  WHERE
    object_type = pbasename;
  INSERT INTO osae_object_type (object_type, object_type_description, plugin_object_id, system_hidden, object_type_owner, base_type_id)
  SELECT pnewname
       , t.object_type_description
       , t.plugin_object_id
       , t.system_hidden
       , t.object_type_owner
       , t.base_type_id
  FROM
    osae_object_type t
  WHERE
    object_type = pbasename;
  SELECT object_type_id
  INTO
    vNewTypeID
  FROM
    osae_object_type
  WHERE
    object_type_id IS NULL;
  INSERT INTO osae_object_type_state (state_name, state_label, object_type_id)
  SELECT state_name
       , state_label
       , vNewTypeID
  FROM
    osae_object_type_state t
  WHERE
    object_type_id = vBaseTypeID;
  INSERT INTO osae_object_type_event (event_name, event_label, object_type_id)
  SELECT event_name
       , event_label
       , vNewTypeID
  FROM
    osae_object_type_event t
  WHERE
    object_type_id = vBaseTypeID;
  INSERT INTO osae_object_type_method (method_name, method_label, object_type_id)
  SELECT method_name
       , method_label
       , vNewTypeID
  FROM
    osae_object_type_method t
  WHERE
    object_type_id = vBaseTypeID;
  INSERT INTO osae_object_type_property (property_name, property_datatype, object_type_id)
  SELECT property_name
       , property_datatype
       , vNewTypeID
  FROM
    osae_object_type_property t
  WHERE
    object_type_id = vBaseTypeID;
END
$$

--
-- Definition for procedure osae_sp_object_type_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_delete(IN pname VARCHAR(200))
BEGIN
  DELETE
  FROM
    osae_object_type
  WHERE
    object_type = pname;
END
$$

--
-- Definition for procedure osae_sp_object_type_event_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_event_add(IN pname       VARCHAR(200),
                                               IN plabel      VARCHAR(200),
                                               IN pobjecttype VARCHAR(200)
                                               )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    INSERT INTO osae_object_type_event (event_name, event_label, object_type_id) VALUES (upper(pname), plabel, vObjectTypeID)
    ON DUPLICATE KEY UPDATE
      event_label = plabel, object_type_id = vObjectTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_event_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_event_delete(IN pname       VARCHAR(200),
                                                  IN pobjecttype VARCHAR(200)
                                                  )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    DELETE
    FROM
      osae_object_type_event
    WHERE
      event_name = pname
      AND object_type_id = vObjectTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_event_update
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_event_update(IN poldname    VARCHAR(200),
                                                  IN pnewname    VARCHAR(200),
                                                  IN plabel      VARCHAR(200),
                                                  IN pobjecttype VARCHAR(200)
                                                  )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    UPDATE osae_object_type_event
    SET
      event_name = upper(pnewname), event_label = plabel
    WHERE
      event_name = upper(poldname)
      AND object_type_id = vObjectTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_method_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_method_add(IN pname          VARCHAR(200),
                                                IN plabel         VARCHAR(200),
                                                IN pobjecttype    VARCHAR(200),
                                                IN pparam1        VARCHAR(100),
                                                IN pparam2        VARCHAR(100),
                                                IN pparam1default VARCHAR(1024),
                                                IN pparam2default VARCHAR(1024)
                                                )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    INSERT INTO osae_object_type_method (method_name, method_label, object_type_id, param_1_label, param_2_label, param_1_default, param_2_default) VALUES (upper(pname), plabel, vObjectTypeID, pparam1, pparam2, pparam1default, pparam2default)
    ON DUPLICATE KEY UPDATE
      method_label = plabel, object_type_id = vObjectTypeID, param_1_label = pparam1, param_2_label = pparam2, param_1_default = pparam1default, param_2_default = pparam2default;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_method_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_method_delete(IN pname       VARCHAR(200),
                                                   IN pobjecttype VARCHAR(200)
                                                   )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    DELETE
    FROM
      osae_object_type_method
    WHERE
      method_name = pname
      AND object_type_id = vObjectTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_method_update
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_method_update(IN poldname       VARCHAR(200),
                                                   IN pnewname       VARCHAR(200),
                                                   IN plabel         VARCHAR(200),
                                                   IN pobjecttype    VARCHAR(200),
                                                   IN pparam1        VARCHAR(100),
                                                   IN pparam2        VARCHAR(100),
                                                   IN pparam1default VARCHAR(1024),
                                                   IN pparam2default VARCHAR(1024)
                                                   )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount = 1 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    UPDATE osae_object_type_method
    SET
      method_name = upper(pnewname), method_label = plabel, param_1_label = pparam1, param_2_label = pparam2, param_1_default = pparam1default, param_2_default = pparam2default
    WHERE
      method_name = upper(poldname)
      AND object_type_id = vObjectTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_property_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_property_add(IN pname         VARCHAR(200),
                                                  IN pparamtype    VARCHAR(50),
                                                  IN pdefault      VARCHAR(255),
                                                  IN pobjecttype   VARCHAR(200),
                                                  IN ptrackhistory TINYINT(1)
                                                  )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  # CALL osae_sp_debug_log_add (concat('vObjectTypeCount ',vObjectTypeCount));
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    INSERT INTO osae_object_type_property (property_name, property_datatype, property_default, object_type_id, track_history) VALUES (pname, pparamtype, pdefault, vObjectTypeID, ptrackhistory)
    ON DUPLICATE KEY UPDATE
      property_datatype = pparamtype, object_type_id = vObjectTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_property_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_property_delete(IN pname       VARCHAR(200),
                                                     IN pobjecttype VARCHAR(200)
                                                     )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    DELETE
    FROM
      osae_object_type_property
    WHERE
      property_name = pname
      AND object_type_id = vObjectTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_property_update
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_property_update(IN poldname      VARCHAR(200),
                                                     IN pnewname      VARCHAR(200),
                                                     IN pparamtype    VARCHAR(50),
                                                     IN pdefault      VARCHAR(255),
                                                     IN pobjecttype   VARCHAR(200),
                                                     IN ptrackhistory TINYINT(1)
                                                     )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    UPDATE osae_object_type_property
    SET
      property_name = pnewname, property_datatype = pparamtype, property_default = pdefault, track_history = ptrackhistory
    WHERE
      property_name = poldname
      AND object_type_id = vObjectTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_state_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_state_add(IN pname       VARCHAR(200),
                                               IN plabel      VARCHAR(200),
                                               IN pobjecttype VARCHAR(200)
                                               )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    INSERT INTO osae_object_type_state (state_name, state_label, object_type_id) VALUES (upper(pname), plabel, vObjectTypeID)
    ON DUPLICATE KEY UPDATE
      state_label = plabel, object_type_id = vObjectTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_state_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_state_delete(IN pname       VARCHAR(200),
                                                  IN pobjecttype VARCHAR(200)
                                                  )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    DELETE
    FROM
      osae_object_type_state
    WHERE
      state_name = pname
      AND object_type_id = vObjectTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_state_update
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_state_update(IN poldname    VARCHAR(200),
                                                  IN pnewname    VARCHAR(200),
                                                  IN plabel      VARCHAR(200),
                                                  IN pobjecttype VARCHAR(200)
                                                  )
BEGIN
  DECLARE vObjectTypeCount INT;
  DECLARE vObjectTypeID    INT;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;
  IF vObjectTypeCount > 0 THEN
    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;
    UPDATE osae_object_type_state
    SET
      state_name = upper(pnewname), state_label = plabel
    WHERE
      state_name = upper(poldname)
      AND object_type_id = vObjectTypeID;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_object_type_update
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_object_type_update(IN poldname             VARCHAR(200),
                                            IN pnewname             VARCHAR(200),
                                            IN pdesc                VARCHAR(200),
                                            IN pownedby             VARCHAR(200),
                                            IN pbasetype            VARCHAR(200),
                                            IN ptypeowner           TINYINT,
                                            IN psystem              TINYINT,
                                            IN pcontainer           TINYINT,
                                            IN phideredundantevents TINYINT
                                            )
BEGIN
  DECLARE vOwnerTypeCount INT;
  DECLARE vOwnerTypeID    INT DEFAULT NULL;
  DECLARE vBaseTypeCount  INT;
  DECLARE vBaseTypeID     INT DEFAULT NULL;

  SELECT count(object_name)
  INTO
    vOwnerTypeCount
  FROM
    osae_v_object
  WHERE
    object_name = pownedby;
  IF vOwnerTypeCount = 1 THEN
    SELECT object_id
    INTO
      vOwnerTypeID
    FROM
      osae_v_object
    WHERE
      object_name = pownedby;
  END IF;
  SELECT count(object_type)
  INTO
    vBaseTypeCount
  FROM
    osae_v_object_type
  WHERE
    object_type = pbasetype;
  IF vBaseTypeCount = 1 THEN
    SELECT object_type_id
    INTO
      vBaseTypeID
    FROM
      osae_v_object_type
    WHERE
      object_type = pbasetype;
  END IF;
  UPDATE osae_object_type
  SET
    object_type = upper(pnewname), object_type_description = pdesc, plugin_object_id = vOwnerTypeID, base_type_id = vBaseTypeID, system_hidden = psystem, object_type_owner = ptypeowner, container = pcontainer, hide_redundant_events = phideredundantevents
  WHERE
    object_type = poldname;
END
$$

--
-- Definition for procedure osae_sp_object_update
--
CREATE DEFINER = 'root'@'%'
PROCEDURE osae_sp_object_update(IN poldname    VARCHAR(200),
                                IN pnewname    VARCHAR(200),
                                IN pdesc       VARCHAR(200),
                                IN pobjecttype VARCHAR(200),
                                IN paddress    VARCHAR(200),
                                IN pcontainer  VARCHAR(200),
                                IN penabled    TINYINT
                                )
BEGIN

  DECLARE vAddressCount    INT;

  DECLARE vObjectTypeCount INT;

  DECLARE vObjectTypeID    INT;

  DECLARE vContainerCount  INT;

  DECLARE vContainerID     INT DEFAULT NULL;

  SELECT count(object_type_id)
  INTO
    vObjectTypeCount
  FROM
    osae_object_type
  WHERE
    object_type = pobjecttype;

  IF vObjectTypeCount > 0 THEN

    SELECT object_type_id
    INTO
      vObjectTypeID
    FROM
      osae_object_type
    WHERE
      object_type = pobjecttype;

    SELECT count(object_id)
    INTO
      vContainerCount
    FROM
      osae_v_object
    WHERE
      object_name = pcontainer
      AND container = 1;

    IF vContainerCount = 1 THEN

      SELECT object_id
      INTO
        vContainerID
      FROM
        osae_v_object
      WHERE
        object_name = pcontainer
        AND container = 1;

    END IF;

    SELECT count(object_id)
    INTO
      vAddressCount
    FROM
      osae_object
    WHERE
      upper(object_name) <> upper(poldname)
      AND (upper(address) = upper(paddress)
      AND address IS NOT NULL
      AND address <> '');

    IF vAddressCount = 0 THEN

      UPDATE osae_object
      SET
        object_name = pnewname, object_description = pdesc, object_type_id = vObjectTypeID, address = paddress, container_id = vContainerID, enabled = penabled, last_updated = now()
      WHERE
        object_name = poldname;

    ELSE

      CALL osae_sp_debug_log_add(concat('Object_Updated Failed on ', pnewname, ' due to duplicate data.'), 'SYSTEM');

    END IF;

  END IF;

END
$$

--
-- Definition for procedure osae_sp_pattern_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_pattern_add(IN pname VARCHAR(400))
BEGIN
  INSERT INTO osae_pattern (pattern, script) VALUES (pname, '')
  ON DUPLICATE KEY UPDATE
    script = '';
END
$$

--
-- Definition for procedure osae_sp_pattern_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_pattern_delete(IN pname VARCHAR(100))
BEGIN
  DELETE
  FROM
    osae_pattern
  WHERE
    pattern = pname;
END
$$

--
-- Definition for procedure osae_sp_pattern_match_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_pattern_match_add(IN ppattern VARCHAR(400),
                                           IN pmatch   VARCHAR(400)
                                           )
BEGIN
  DECLARE vPatternCount INT;
  DECLARE vPatternID    INT DEFAULT NULL;

  SELECT count(pattern_id)
  INTO
    vPatternCount
  FROM
    osae_pattern
  WHERE
    pattern = ppattern;
  IF vPatternCount > 0 THEN
    SELECT pattern_id
    INTO
      vPatternID
    FROM
      osae_pattern
    WHERE
      pattern = ppattern;
    INSERT INTO osae_pattern_match (pattern_id, `match`) VALUES (vPatternID, pmatch)
    ON DUPLICATE KEY UPDATE
      `match` = pmatch;
  END IF;
END
$$

--
-- Definition for procedure osae_sp_pattern_match_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_pattern_match_delete(IN pname VARCHAR(400))
BEGIN
  DELETE
  FROM
    osae_pattern_match
  WHERE
    `match` = pname;
END
$$

--
-- Definition for procedure osae_sp_pattern_parse
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_pattern_parse(IN ppattern VARCHAR(2000))
BEGIN
  DECLARE vInput   VARCHAR(2000) DEFAULT '';
  DECLARE vOutput  VARCHAR(2000) DEFAULT '';
  DECLARE vOld     VARCHAR(200);
  DECLARE vWorking VARCHAR(200);
  DECLARE vDot     INT DEFAULT 0;
  DECLARE vSpace1  INT DEFAULT 0;
  DECLARE vSpace2  INT DEFAULT 0;
  DECLARE vObject  VARCHAR(200);
  DECLARE vParam   VARCHAR(200);
  DECLARE vTemp    VARCHAR(200);

  SET vInput = ppattern;
  SELECT instr(vInput, '[')
  INTO
    vSpace1;
  SELECT instr(vInput, ']')
  INTO
    vSpace2;

  WHILE vSpace2 > vSpace1
  DO
    SELECT mid(vInput, vSpace1, vSpace2 - vSpace1 + 1)
    INTO
      vOld;
    SELECT mid(vInput, vSpace1 + 1, vSpace2 - vSpace1 - 1)
    INTO
      vWorking;
    #SELECT vOld, vWorking;     
    SELECT instr(vWorking, '.')
    INTO
      vDot;
    IF vDOT > 0 THEN
      SET vObject = left(vWorking, vDot - 1);
      SET vParam = right(vWorking, length(vWorking) - vDot);
      IF vParam = 'State' THEN
        SELECT state_name
        INTO
          vTemp
        FROM
          osae_v_object
        WHERE
          object_name = vObject;
        SET vInput = replace(vInput, vOld, vTemp);
      ELSE
        SELECT property_value
        INTO
          vTemp
        FROM
          osae_v_object_property
        WHERE
          object_name = vObject
          AND property_name = vParam;
        SET vInput = replace(vInput, vOld, vTemp);
      END IF;
    END IF;
    SELECT instr(vInput, '[')
    INTO
      vSpace1;
    SELECT instr(vInput, ']')
    INTO
      vSpace2;
  END WHILE;
  SELECT vInput;
END
$$

--
-- Definition for procedure osae_sp_pattern_update
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_pattern_update(IN poldpattern VARCHAR(400),
                                        IN pnewpattern VARCHAR(400),
                                        IN pscript     TEXT
                                        )
BEGIN
  UPDATE osae_pattern
  SET
    pattern = pnewpattern, script = pscript
  WHERE
    pattern = poldpattern;
END
$$

--
-- Definition for procedure osae_sp_process_recurring
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_process_recurring()
BEGIN DECLARE iRECURRINGID      INT;
  DECLARE vOBJECTNAME       VARCHAR(400) DEFAULT '';
  DECLARE vMETHODNAME       VARCHAR(400) DEFAULT '';
  DECLARE vPARAM1           VARCHAR(200);
  DECLARE vPARAM2           VARCHAR(200);
  DECLARE iPATTERNID        INT;
  DECLARE cINTERVAL         CHAR(1);
  DECLARE cSUNDAY           CHAR(1);
  DECLARE cMONDAY           CHAR(1);
  DECLARE cTUESDAY          CHAR(1);
  DECLARE cWEDNESDAY        CHAR(1);
  DECLARE cTHURSDAY         CHAR(1);
  DECLARE cFRIDAY           CHAR(1);
  DECLARE cSATURDAY         CHAR(1);
  DECLARE dRECURRINGDATE    DATE;
  DECLARE iRECURRINGMINUTES INT;
  DECLARE dRECURRINGDAY     INT;
  DECLARE dRECURRINGTIME    TIME;
  DECLARE dCURDATE          DATE;
  DECLARE dCURDATETIME      DATETIME;
  DECLARE dCURDAYOFWEEK     INT DEFAULT 0;
  DECLARE dCURDAYOFMONTH    INT DEFAULT 1;
  DECLARE dCURDAY           INT DEFAULT 1;
  DECLARE iMATCHES          INT DEFAULT 0;
  DECLARE iDATEDIFF         INT DEFAULT 0;
  DECLARE done              INT DEFAULT 0;
  DECLARE cur1 CURSOR FOR SELECT recurring_id
                               , interval_unit
                               , recurring_time
                               , recurring_minutes
                               , recurring_date
                               , recurring_day
                               , object_name
                               , method_name
                               , parameter_1
                               , parameter_2
                               , pattern_id
                               , sunday
                               , monday
                               , tuesday
                               , wednesday
                               , thursday
                               , friday
                               , saturday
                          FROM
                            osae_v_schedule_recurring;
  DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;

  OPEN cur1;

Loop_Tag:
  LOOP
    IF done THEN
      LEAVE Loop_Tag;
    END IF;
    FETCH cur1 INTO iRECURRINGID, cINTERVAL, dRECURRINGTIME, iRECURRINGMINUTES, dRECURRINGDATE, dRECURRINGDAY, vOBJECTNAME, vMETHODNAME, vPARAM1, vPARAM2, iPATTERNID, cSUNDAY, cMONDAY, cTUESDAY, cWEDNESDAY, cTHURSDAY, cFRIDAY, cSATURDAY;
    CALL osae_sp_debug_log_add(concat('ID=', iRECURRINGID, ', Interval=', cINTERVAL, ' Time=', dRECURRINGTIME, ' Date=', dRECURRINGDATE), 'sp_process_recurring');
    IF NOT done THEN
      IF cINTERVAL = 'Y' THEN
        SET dCURDATE = curdate();
        CALL osae_sp_debug_log_add(concat('--IF ', dRECURRINGDATE, ' < ', dCURDATE, ' THEN'), 'SYSTEM');
        IF dRECURRINGDATE < dCURDATE THEN
          SET iDATEDIFF = datediff(dCURDATE, dRECURRINGDATE) / 365;
          CALL osae_sp_debug_log_add(concat('sp_process_recurring: DateDiff=', iDATEDIFF), 'SYSTEM');
          SET dRECURRINGDATE = date_add(dRECURRINGDATE, INTERVAL iDATEDIFF YEAR);
          IF dRECURRINGDATE < dCURDATE THEN
            SET dRECURRINGDATE = date_add(dRECURRINGDATE, INTERVAL 1 YEAR);
          END IF;
        END IF;
        CALL osae_sp_debug_log_add(concat(dRECURRINGDATE, ' ', time(dRECURRINGTIME)), 'SYSTEM');
        SELECT count(schedule_ID)
        INTO
          iMATCHES
        FROM
          osae_schedule_queue
        WHERE
          recurring_id = iRECURRINGID;
        IF iMATCHES = 0 THEN
          CALL osae_sp_schedule_queue_add(concat(dRECURRINGDATE, ' ', time(dRECURRINGTIME)), vOBJECTNAME, vMETHODNAME, vPARAM1, vPARAM2, iPATTERNID, iRECURRINGID);
        END IF;
      ELSEIF cINTERVAL = 'T' THEN
        SET dCURDATETIME = now();
        SET dCURDATE = curdate();
        IF dCURDATETIME > concat(dCURDATE, ' ', addtime(now(), sec_to_time(iRECURRINGMINUTES * 60))) THEN
          SET dCURDAYOFWEEK = dCURDAYOFWEEK + 1;
          SET dCURDATE = date_add(curdate(), INTERVAL 1 DAY);
        END IF;
        CALL osae_sp_debug_log_add(concat(dRECURRINGDATE, ' ', time(dRECURRINGTIME)), 'SYSTEM');
        SELECT count(schedule_ID)
        INTO
          iMATCHES
        FROM
          osae_schedule_queue
        WHERE
          recurring_id = iRECURRINGID;
        IF iMATCHES = 0 THEN
          CALL osae_sp_schedule_queue_add(concat(dCURDATE, ' ', addtime(now(), sec_to_time(iRECURRINGMINUTES * 60))), vOBJECTNAME, vMETHODNAME, vPARAM1, vPARAM2, iPATTERNID, iRECURRINGID);
        END IF;
      ELSEIF cINTERVAL = 'M' THEN
        SET dCURDATE = curdate();
        SET dRECURRINGDATE = concat(year(now()), '-', month(now()), '-', dRECURRINGDAY);
        IF dRECURRINGDATE < dCURDATE THEN
          CALL osae_sp_debug_log_add(concat('sp_process_recurring: DateDiff=', iDATEDIFF), 'SYSTEM');
          SET dRECURRINGDATE = date_add(dRECURRINGDATE, INTERVAL 1 MONTH);
          IF dRECURRINGDATE < dCURDATE THEN
            SET dRECURRINGDATE = date_add(dRECURRINGDATE, INTERVAL 1 MONTH);
          END IF;
        END IF;
        CALL osae_sp_debug_log_add(concat(dRECURRINGDATE, ' ', time(dRECURRINGTIME)), 'SYSTEM');
        SELECT count(schedule_ID)
        INTO
          iMATCHES
        FROM
          osae_schedule_queue
        WHERE
          recurring_id = iRECURRINGID;
        IF iMATCHES = 0 THEN
          CALL osae_sp_schedule_queue_add(concat(dRECURRINGDATE, ' ', time(dRECURRINGTIME)), vOBJECTNAME, vMETHODNAME, vPARAM1, vPARAM2, iPATTERNID, iRECURRINGID);
        END IF;
      ELSEIF cINTERVAL = 'D' THEN
        SET dCURDATETIME = now();
        SET dCURDATE = curdate();
        SET dCURDAYOFWEEK = dayofweek(now());
        SET dCURDAYOFMONTH = dayofmonth(now());

        IF dCURDATETIME > concat(dCURDATE, ' ', dRECURRINGTIME) THEN
          SET dCURDAYOFWEEK = dCURDAYOFWEEK + 1;
          SET dCURDATE = date_add(curdate(), INTERVAL 1 DAY);
        END IF;
        CALL osae_sp_debug_log_add(concat('IF ', dCURDATETIME, ' > ', dCURDATE, ' ', dRECURRINGTIME, ' Then Write new queue'), 'SYSTEM');
        IF dCURDAYOFWEEK = 1 AND cSUNDAY = 1 THEN
          SELECT count(schedule_ID)
          INTO
            iMATCHES
          FROM
            osae_schedule_queue
          WHERE
            recurring_id = iRECURRINGID;
          IF iMATCHES = 0 THEN
            CALL osae_sp_schedule_queue_add(concat(dCURDATE, ' ', time(dRECURRINGTIME)), vOBJECTNAME, vMETHODNAME, vPARAM1, vPARAM2, iPATTERNID, iRECURRINGID);
          END IF;
        END IF;
        IF dCURDAYOFWEEK = 2 AND cMONDAY = 1 THEN
          SELECT count(schedule_ID)
          INTO
            iMATCHES
          FROM
            osae_schedule_queue
          WHERE
            recurring_id = iRECURRINGID;
          IF iMATCHES = 0 THEN
            CALL osae_sp_schedule_queue_add(concat(dCURDATE, ' ', time(dRECURRINGTIME)), vOBJECTNAME, vMETHODNAME, vPARAM1, vPARAM2, iPATTERNID, iRECURRINGID);
          END IF;
        END IF;
        IF dCURDAYOFWEEK = 3 AND cTUESDAY = 1 THEN
          SELECT count(schedule_ID)
          INTO
            iMATCHES
          FROM
            osae_schedule_queue
          WHERE
            recurring_id = iRECURRINGID;
          IF iMATCHES = 0 THEN
            CALL osae_sp_schedule_queue_add(concat(dCURDATE, ' ', time(dRECURRINGTIME)), vOBJECTNAME, vMETHODNAME, vPARAM1, vPARAM2, iPATTERNID, iRECURRINGID);
          END IF;
        END IF;
        IF dCURDAYOFWEEK = 4 AND cWEDNESDAY = 1 THEN
          SELECT count(schedule_ID)
          INTO
            iMATCHES
          FROM
            osae_schedule_queue
          WHERE
            recurring_id = iRECURRINGID;
          IF iMATCHES = 0 THEN
            CALL osae_sp_schedule_queue_add(concat(dCURDATE, ' ', time(dRECURRINGTIME)), vOBJECTNAME, vMETHODNAME, vPARAM1, vPARAM2, iPATTERNID, iRECURRINGID);
          END IF;
        END IF;
        IF dCURDAYOFWEEK = 5 AND cTHURSDAY = 1 THEN
          SELECT count(schedule_ID)
          INTO
            iMATCHES
          FROM
            osae_schedule_queue
          WHERE
            recurring_id = iRECURRINGID;
          IF iMATCHES = 0 THEN
            CALL osae_sp_schedule_queue_add(concat(dCURDATE, ' ', time(dRECURRINGTIME)), vOBJECTNAME, vMETHODNAME, vPARAM1, vPARAM2, iPATTERNID, iRECURRINGID);
          END IF;
        END IF;
        IF dCURDAYOFWEEK = 6 AND cFRIDAY = 1 THEN
          SELECT count(schedule_ID)
          INTO
            iMATCHES
          FROM
            osae_schedule_queue
          WHERE
            recurring_id = iRECURRINGID;
          IF iMATCHES = 0 THEN
            CALL osae_sp_schedule_queue_add(concat(dCURDATE, ' ', time(dRECURRINGTIME)), vOBJECTNAME, vMETHODNAME, vPARAM1, vPARAM2, iPATTERNID, iRECURRINGID);
          END IF;
        END IF;
        IF dCURDAYOFWEEK = 7 AND cSATURDAY = 1 THEN
          SELECT count(schedule_ID)
          INTO
            iMATCHES
          FROM
            osae_schedule_queue
          WHERE
            recurring_id = iRECURRINGID;
          IF iMATCHES = 0 THEN
            CALL osae_sp_schedule_queue_add(concat(dCURDATE, ' ', time(dRECURRINGTIME)), vOBJECTNAME, vMETHODNAME, vPARAM1, vPARAM2, iPATTERNID, iRECURRINGID);
          END IF;
        END IF;
      END IF;
    END IF;
  END LOOP;
  CLOSE cur1;
END
$$

--
-- Definition for procedure osae_sp_run_scheduled_methods
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_run_scheduled_methods()
BEGIN DECLARE iSCHEDULEID INT;
  DECLARE iOBJECTID   INT DEFAULT 0;
  DECLARE vObjectName VARCHAR(400) DEFAULT '';
  DECLARE iMETHODID   INT DEFAULT 0;
  DECLARE vMethodName VARCHAR(400);
  DECLARE vPARAM1     VARCHAR(200);
  DECLARE vPARAM2     VARCHAR(200);
  DECLARE iPATTERNID  INT DEFAULT 0;
  DECLARE done        INT DEFAULT 0;
  DECLARE cur1 CURSOR FOR SELECT schedule_ID
                               , object_name
                               , method_name
                               , parameter_1
                               , parameter_2
                               , pattern_id
                          FROM
                            osae_v_schedule_queue
                          WHERE
                            queue_datetime < now();
  DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;

  OPEN cur1;

Loop_Tag:
  LOOP
    IF done THEN
      LEAVE Loop_Tag;
    END IF;
    FETCH cur1 INTO iSCHEDULEID, vObjectName, vMethodName, vPARAM1, vPARAM2, iPATTERNID;
    CALL osae_sp_debug_log_add(concat('Found Scheduled Method to run:', iSCHEDULEID), 'osae_sp_run_scheduled_methods');
    DELETE
    FROM
      osae_schedule_queue
    WHERE
      schedule_ID = iSCHEDULEID;
    IF vObjectName != '' THEN
      CALL osae_sp_method_queue_add(vObjectName, vMethodName, vPARAM1, vPARAM2, 'SYSTEM', 'osae_sp_run_scheduled_methods');
    ELSEIF iPATTERNID != 0 THEN
      CALL osae_sp_method_queue_add('SCRIPT PROCESSOR', 'PATTERN SCRIPT', iPATTERNID, 'SYSTEM', 'SYSTEM', 'osae_sp_run_scheduled_methods');
    END IF;
  END LOOP;
  CLOSE cur1;
  CALL osae_sp_process_recurring();
END
$$

--
-- Definition for procedure osae_sp_schedule_queue_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_schedule_queue_add(IN pscheduleddate DATETIME,
                                            IN pobject        VARCHAR(400),
                                            IN pmethod        VARCHAR(400),
                                            IN pparameter1    VARCHAR(2000),
                                            IN pparameter2    VARCHAR(2000),
                                            IN ppattern       VARCHAR(200),
                                            IN precurringid   INT(10)
                                            )
BEGIN
  DECLARE vObjectID    INT DEFAULT NULL;
  DECLARE vMethodID    INT DEFAULT NULL;
  DECLARE vRecurringID INT DEFAULT NULL;

  SELECT object_id
       , method_id
  INTO
    vObjectID, vMethodID
  FROM
    osae_v_object_method
  WHERE
    upper(object_name) = upper(pobject)
    AND (upper(method_name) = upper(pmethod)
    OR upper(method_label) = upper(pmethod));
  IF precurringid > 0 THEN
    SET vRecurringID = precurringid;
  END IF;
  INSERT INTO osae_schedule_queue (queue_datetime, object_id, method_id, parameter_1, parameter_2, pattern_id, recurring_id) VALUES (pscheduleddate, vObjectID, vMethodID, pparameter1, pparameter2, NULL, vRecurringID);
END
$$

--
-- Definition for procedure osae_sp_schedule_queue_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_schedule_queue_delete(IN pqueueid INT)
BEGIN
  DELETE
  FROM
    osae_schedule_queue
  WHERE
    schedule_id = pqueueid;
END
$$

--
-- Definition for procedure osae_sp_schedule_recurring_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_schedule_recurring_add(IN pschedule_name    VARCHAR(400),
                                                IN pobject           VARCHAR(400),
                                                IN pmethod           VARCHAR(400),
                                                IN pparameter1       VARCHAR(2000),
                                                IN pparameter2       VARCHAR(2000),
                                                IN ppattern          VARCHAR(400),
                                                IN precurringtime    TIME,
                                                IN psunday           TINYINT(1),
                                                IN pmonday           TINYINT(1),
                                                IN ptuesday          TINYINT(1),
                                                IN pwednesday        TINYINT(1),
                                                IN pthursday         TINYINT(1),
                                                IN pfriday           TINYINT(1),
                                                IN psaturday         TINYINT(1),
                                                IN pinterval         VARCHAR(10),
                                                IN precurringminutes INT(8),
                                                IN precurringday     INT(4),
                                                IN precurringdate    DATE
                                                )
BEGIN
  DECLARE vObjectID INT DEFAULT NULL;
  DECLARE vMethodID INT DEFAULT NULL;

  SELECT object_id
       , method_id
  INTO
    vObjectID, vMethodID
  FROM
    osae_v_object_method
  WHERE
    upper(object_name) = upper(pobject)
    AND (upper(method_name) = upper(pmethod)
    OR upper(method_label) = upper(pmethod));
  INSERT INTO osae_schedule_recurring (schedule_name, object_id, method_id, parameter_1, parameter_2, pattern_id, interval_unit, recurring_time, recurring_minutes, recurring_day, recurring_date, sunday, monday, tuesday, wednesday, thursday, friday, saturday) VALUES (pschedule_name, vObjectID, vMethodID, pparameter1, pparameter2, NULL, pinterval, precurringtime, precurringminutes, precurringday, precurringdate, psunday, pmonday, ptuesday, pwednesday, pthursday, pfriday, psaturday);
END
$$

--
-- Definition for procedure osae_sp_schedule_recurring_delete
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_schedule_recurring_delete(IN pschedulename VARCHAR(400))
BEGIN
  DELETE
  FROM
    osae_schedule_recurring
  WHERE
    schedule_name = pschedulename;
END
$$

--
-- Definition for procedure osae_sp_schedule_recurring_update
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_schedule_recurring_update(IN poldschedulename  VARCHAR(400),
                                                   IN pnewschedulename  VARCHAR(400),
                                                   IN pobject           VARCHAR(400),
                                                   IN pmethod           VARCHAR(400),
                                                   IN pparameter1       VARCHAR(2000),
                                                   IN pparameter2       VARCHAR(2000),
                                                   IN ppattern          VARCHAR(400),
                                                   IN precurringtime    TIME,
                                                   IN psunday           TINYINT(1),
                                                   IN pmonday           TINYINT(1),
                                                   IN ptuesday          TINYINT(1),
                                                   IN pwednesday        TINYINT(1),
                                                   IN pthursday         TINYINT(1),
                                                   IN pfriday           TINYINT(1),
                                                   IN psaturday         TINYINT(1),
                                                   IN pinterval         VARCHAR(10),
                                                   IN precurringminutes INT(8),
                                                   IN precurringday     INT(4),
                                                   IN pprecurringdate   DATE
                                                   )
BEGIN
  DECLARE vObjectID INT DEFAULT NULL;
  DECLARE vMethodID INT DEFAULT NULL;

  SELECT object_id
       , method_id
  INTO
    vObjectID, vMethodID
  FROM
    osae_v_object_method
  WHERE
    upper(object_name) = upper(pobject)
    AND (upper(method_name) = upper(pmethod)
    OR upper(method_label) = upper(pmethod));
  UPDATE osae_schedule_recurring
  SET
    schedule_name = pnewschedulename, object_id = vObjectID, method_id = vMethodID, parameter_1 = pparameter1, parameter_2 = pparameter2, pattern_id = NULL, interval_unit = pinterval, recurring_time = precurringtime, recurring_minutes = precurringminutes, recurring_day = precurringday, recurring_date = pprecurringdate, sunday = psunday, monday = pmonday, tuesday = ptuesday, wednesday = pwednesday, thursday = pthursday, friday = pfriday, saturday = psaturday
  WHERE
    schedule_name = poldschedulename;
END
$$

--
-- Definition for procedure osae_sp_screen_object_add
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_screen_object_add(IN pscreenname  VARCHAR(200),
                                           IN pobjectname  VARCHAR(200),
                                           IN pcontrolname VARCHAR(200)
                                           )
BEGIN
  DECLARE vScreenID  INT;
  DECLARE vObjectID  INT;
  DECLARE vControlID INT;

  SELECT osae_fn_lookup_object_id(pscreenname)
  INTO
    vScreenID;
  SELECT osae_fn_lookup_object_id(pobjectname)
  INTO
    vObjectID;
  SELECT osae_fn_lookup_object_id(pcontrolname)
  INTO
    vControlID;
  INSERT INTO osae_screen_object (screen_id, object_id, control_id) VALUES (vScreenID, vObjectID, vControlID);
END
$$

--
-- Definition for procedure osae_sp_system_count_occupants
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE osae_sp_system_count_occupants()
BEGIN
  DECLARE vOccupantCount INT;
  DECLARE vOldCount      INT;
  DECLARE vTemp          VARCHAR(200);
  DECLARE vOutput        VARCHAR(200);

  SET vOldCount = (SELECT property_value
                   FROM
                     osae_v_object_property
                   WHERE
                     object_name = 'SYSTEM'
                     AND property_name = 'Occupants');
  SELECT count(object_id)
  INTO
    vOccupantCount
  FROM
    osae_v_object
  WHERE
    object_type = 'PERSON'
    AND state_name = 'ON';
  IF vOldCount != vOccupantCount THEN
    CALL osae_sp_object_property_set('SYSTEM', 'Occupants', vOccupantCount, 'SYSTEM', 'osae_sp_system_count_occupants');
    CASE vOccupantCount
    WHEN 0 THEN
      SET vOutput = 'Nobody is here';
      CALL osae_sp_object_property_set('SYSTEM', 'Occupant String', vOutput, 'SYSTEM', 'osae_sp_system_count_occupants');
    WHEN 1 THEN
      SET vOutput = (SELECT coalesce(object_name, 'Nobody')
                     FROM
                       osae_v_object
                     WHERE
                       object_type = 'PERSON'
                       AND state_name = 'ON'
                     LIMIT
                       1);
      SET vOutput = concat(vOutput, ' is here');
      CALL osae_sp_object_property_set('SYSTEM', 'Occupant String', vOutput, 'SYSTEM', 'osae_sp_system_count_occupants');
    WHEN 2 THEN
      SET vTemp = (SELECT object_name
                   FROM
                     osae_v_object
                   WHERE
                     object_type = 'PERSON'
                     AND state_name = 'ON'
                   LIMIT
                     1);
      SET vOutput = (SELECT object_name
                     FROM
                       osae_v_object
                     WHERE
                       object_type = 'PERSON'
                       AND state_name = 'ON'
                       AND object_name <> vTemp
                     LIMIT
                       1);
      SET vOutput = concat(vOutput, ' and ', vTemp, ' are here');
      CALL osae_sp_object_property_set('SYSTEM', 'Occupant String', vOutput, 'SYSTEM', 'osae_sp_system_count_occupants');
    END CASE;
  END IF;
  SET vOldCount = 0;
  SET vOldCount = (SELECT coalesce(property_value, 0)
                   FROM
                     osae_v_object_property
                   WHERE
                     object_name = 'SYSTEM'
                     AND property_name = 'Occupied Locations');
  SELECT count(object_id)
  INTO
    vOccupantCount
  FROM
    osae_v_object
  WHERE
    object_type = 'PLACE'
    AND state_name = 'ON';
  #CALL osae_sp_debug_log_add(CONCAT('Counted Places: ',vOccupantCount, ' Old count = ',vOldCount),'SYSTEM');
  IF vOldCount != vOccupantCount THEN
    CALL osae_sp_object_property_set('SYSTEM', 'Occupied Locations', vOccupantCount, 'SYSTEM', 'osae_sp_system_count_occupants');
    CASE vOccupantCount
    WHEN 0 THEN
      SET vOutput = 'All Locations are Vacant';
      CALL osae_sp_object_property_set('SYSTEM', 'Occupied Location String', vOutput, 'SYSTEM', 'osae_sp_system_count_occupants');
    WHEN 1 THEN
      SET vOutput = (SELECT object_name
                     FROM
                       osae_v_object
                     WHERE
                       object_type = 'PLACE'
                       AND state_name = 'ON'
                     LIMIT
                       1);
      SET vOutput = concat('The ', vOutput, ' is occupied');
      CALL osae_sp_object_property_set('SYSTEM', 'Occupied Location String', vOutput, 'SYSTEM', 'osae_sp_system_count_occupants');
    WHEN 2 THEN
      SET vTemp = (SELECT object_name
                   FROM
                     osae_v_object
                   WHERE
                     object_type = 'PLACE'
                     AND state_name = 'ON'
                   LIMIT
                     1);
      SET vOutput = (SELECT object_name
                     FROM
                       osae_v_object
                     WHERE
                       object_type = 'PLACE'
                       AND state_name = 'ON'
                       AND object_name <> vTemp
                     LIMIT
                       1);
      SET vOutput = concat('The ', vOutput, ' and the ', vTemp, ' are occupied');
      CALL osae_sp_object_property_set('SYSTEM', 'Occupied Location String', vOutput, 'SYSTEM', 'osae_sp_system_count_occupants');
    END CASE;
  END IF;
END
$$

--
-- Definition for function osae_fn_lookup_object_id
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION osae_fn_lookup_object_id(pobjectname VARCHAR(200))
  RETURNS int(11)
BEGIN
  DECLARE vObjectID INT;

  SELECT object_id
  INTO
    vObjectID
  FROM
    osae_object
  WHERE
    object_name = pobjectname;
  RETURN vObjectID;
END
$$

--
-- Definition for function osae_fn_object_property_get
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION osae_fn_object_property_get(pname     VARCHAR(200),
                                            pproperty VARCHAR(200)
                                            )
  RETURNS varchar(2000) CHARSET utf8
BEGIN
  DECLARE vProperty VARCHAR(2000) DEFAULT '';

  SELECT property_value
  INTO
    vProperty
  FROM
    osae_v_object_property
  WHERE
    object_name = pname
    AND property_name = pproperty;
  RETURN vProperty;
END
$$

--
-- Definition for function osae_fn_replace_objects
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION osae_fn_replace_objects()
  RETURNS int(11)
BEGIN
  RETURN NULL;
END
$$

DELIMITER ;

--
-- Definition for view osae_v_event_log
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_event_log
AS
	select `osae_event_log`.`event_log_id` AS `event_log_id`,`osae_event_log`.`from_object_id` AS `from_object_id`,`osae_event_log`.`debug_trace` AS `debug_trace`,`osae_event_log`.`log_time` AS `log_time`,`osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object`.`state_id` AS `state_id`,`osae_object`.`object_value` AS `object_value`,`osae_object`.`address` AS `address`,`osae_object`.`container_id` AS `container_id`,`osae_object`.`enabled` AS `enabled`,`osae_object_type_event`.`event_id` AS `event_id`,`osae_object_type_event`.`event_name` AS `event_name`,`osae_object_type_event`.`event_label` AS `event_label`,`osae_object_type`.`object_type_id` AS `object_type_id`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type`.`plugin_object_id` AS `plugin_object_id`,`osae_object_type`.`system_hidden` AS `system_hidden`,`osae_object_type`.`object_type_owner` AS `object_type_owner`,`osae_object_type`.`base_type_id` AS `base_type_id`,`osae_object_type`.`container` AS `container`,`osae_object1`.`object_name` AS `from_object_name` from ((((`osae_object` join `osae_event_log` on((`osae_object`.`object_id` = `osae_event_log`.`object_id`))) join `osae_object_type_event` on((`osae_event_log`.`event_id` = `osae_object_type_event`.`event_id`))) join `osae_object_type` on((`osae_object_type_event`.`object_type_id` = `osae_object_type`.`object_type_id`))) left join `osae_object` `osae_object1` on((`osae_object1`.`object_id` = `osae_event_log`.`from_object_id`)));

--
-- Definition for view osae_v_event_script_logjunk
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_event_script_logjunk
AS
	select `osae_event_log`.`event_log_id` AS `event_log_id`,`osae_event_log`.`log_time` AS `log_time`,`osae_object_event_script`.`event_script` AS `event_script`,`osae_object_event_script`.`event_id` AS `event_id`,`osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_type_id` AS `object_type_id`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type_event`.`event_name` AS `event_name`,`osae_object_type_event`.`event_label` AS `event_label` from ((((`osae_object_event_script` join `osae_event_log` on(((`osae_object_event_script`.`object_id` = `osae_event_log`.`object_id`) and (`osae_object_event_script`.`event_id` = `osae_event_log`.`event_id`)))) join `osae_object` on((`osae_object_event_script`.`object_id` = `osae_object`.`object_id`))) join `osae_object_type` on((`osae_object`.`object_type_id` = `osae_object_type`.`object_type_id`))) join `osae_object_type_event` on((`osae_object_event_script`.`event_id` = `osae_object_type_event`.`event_id`)));

--
-- Definition for view osae_v_method_log
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_method_log
AS
	select `osae_method_log`.`method_log_id` AS `method_log_id`,`osae_method_log`.`entry_time` AS `entry_time`,`osae_method_log`.`method_id` AS `method_id`,`osae_method_log`.`parameter_1` AS `parameter_1`,`osae_method_log`.`parameter_2` AS `parameter_2`,`osae_method_log`.`from_object_id` AS `from_object_id`,`osae_method_log`.`debug_trace` AS `debug_trace`,`osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object`.`state_id` AS `state_id`,`osae_object`.`object_value` AS `object_value`,`osae_object`.`address` AS `address`,`osae_object_type`.`object_type_id` AS `object_type_id`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type`.`plugin_object_id` AS `plugin_object_id`,`osae_object_type`.`system_hidden` AS `system_hidden`,`osae_object_type`.`object_type_owner` AS `object_type_owner`,`osae_object_type`.`base_type_id` AS `base_type_id`,`osae_object_type_method`.`method_label` AS `method_label`,`osae_object_type_method`.`method_name` AS `method_name`,`osae_object_types1`.`object_type` AS `base_type`,`osae_objects1`.`object_name` AS `object_owner` from (((((`osae_object_type` left join `osae_object` `osae_objects1` on((`osae_object_type`.`plugin_object_id` = `osae_objects1`.`object_id`))) left join `osae_object_type` `osae_object_types1` on((`osae_object_type`.`base_type_id` = `osae_object_types1`.`object_type_id`))) join `osae_object` on((`osae_object`.`object_type_id` = `osae_object_type`.`object_type_id`))) join `osae_object_type_method` on((`osae_object_type`.`object_type_id` = `osae_object_type_method`.`object_type_id`))) join `osae_method_log` on(((`osae_object`.`object_id` = `osae_method_log`.`object_id`) and (`osae_object_type_method`.`method_id` = `osae_method_log`.`method_id`))));

--
-- Definition for view osae_v_method_queue
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_method_queue
AS
	select `osae_method_queue`.`method_queue_id` AS `method_queue_id`,`osae_method_queue`.`entry_time` AS `entry_time`,`osae_method_queue`.`method_id` AS `method_id`,`osae_method_queue`.`parameter_1` AS `parameter_1`,`osae_method_queue`.`parameter_2` AS `parameter_2`,`osae_method_queue`.`from_object_id` AS `from_object_id`,`osae_method_queue`.`debug_trace` AS `debug_trace`,`osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object`.`state_id` AS `state_id`,`osae_object`.`object_value` AS `object_value`,`osae_object`.`address` AS `address`,`osae_object_type`.`object_type_id` AS `object_type_id`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type`.`plugin_object_id` AS `plugin_object_id`,`osae_object_type`.`system_hidden` AS `system_hidden`,`osae_object_type`.`object_type_owner` AS `object_type_owner`,`osae_object_type`.`base_type_id` AS `base_type_id`,`osae_object_type_method`.`method_label` AS `method_label`,`osae_object_type_method`.`method_name` AS `method_name`,`osae_object_types1`.`object_type` AS `base_type`,`osae_objects1`.`object_name` AS `object_owner` from (((((`osae_object_type` left join `osae_object` `osae_objects1` on((`osae_object_type`.`plugin_object_id` = `osae_objects1`.`object_id`))) left join `osae_object_type` `osae_object_types1` on((`osae_object_type`.`base_type_id` = `osae_object_types1`.`object_type_id`))) join `osae_object` on((`osae_object`.`object_type_id` = `osae_object_type`.`object_type_id`))) join `osae_object_type_method` on((`osae_object_type`.`object_type_id` = `osae_object_type_method`.`object_type_id`))) join `osae_method_queue` on(((`osae_object`.`object_id` = `osae_method_queue`.`object_id`) and (`osae_object_type_method`.`method_id` = `osae_method_queue`.`method_id`))));

--
-- Definition for view osae_v_object
--
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW osae_v_object
AS
	select `osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object`.`object_value` AS `object_value`,`osae_object`.`address` AS `address`,`osae_object`.`last_updated` AS `last_updated`,`osae_object`.`last_state_change` AS `last_state_change`,`osae_object`.`enabled` AS `enabled`,`osae_object_type`.`object_type_id` AS `object_type_id`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type`.`plugin_object_id` AS `plugin_object_id`,`osae_object_type`.`system_hidden` AS `system_hidden`,`osae_object_type`.`object_type_owner` AS `object_type_owner`,`osae_object_type`.`base_type_id` AS `base_type_id`,`osae_object_type`.`container` AS `container`,`osae_object_type_state`.`state_id` AS `state_id`,`osae_object_type_state`.`state_name` AS `state_name`,`osae_object_type_state`.`state_label` AS `state_label`,`objects_2`.`object_name` AS `owned_by`,`object_types_2`.`object_type` AS `base_type`,`objects_1`.`object_name` AS `container_name`,`osae_object`.`container_id` AS `container_id`,timestampdiff(MINUTE,`osae_object`.`last_state_change`,now()) AS `time_in_state` from (((((`osae_object` left join `osae_object_type` on((`osae_object`.`object_type_id` = `osae_object_type`.`object_type_id`))) left join `osae_object_type` `object_types_2` on((`osae_object_type`.`base_type_id` = `object_types_2`.`object_type_id`))) left join `osae_object` `objects_2` on((`osae_object_type`.`plugin_object_id` = `objects_2`.`object_id`))) left join `osae_object_type_state` on(((`osae_object_type`.`object_type_id` = `osae_object_type_state`.`object_type_id`) and (`osae_object_type_state`.`state_id` = `osae_object`.`state_id`)))) left join `osae_object` `objects_1` on((`objects_1`.`object_id` = `osae_object`.`container_id`)));

--
-- Definition for view osae_v_object_event
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_event
AS
	select `osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object`.`state_id` AS `state_id`,`osae_object`.`object_value` AS `object_value`,`osae_object`.`address` AS `address`,`osae_object`.`container_id` AS `container_id`,`osae_object`.`enabled` AS `enabled`,`osae_object_type`.`object_type_id` AS `object_type_id`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type`.`plugin_object_id` AS `plugin_object_id`,`osae_object_type`.`system_hidden` AS `system_hidden`,`osae_object_type`.`object_type_owner` AS `object_type_owner`,`osae_object_type`.`base_type_id` AS `base_type_id`,`osae_object_type`.`container` AS `container`,`osae_object_type_event`.`event_id` AS `event_id`,`osae_object_type_event`.`event_name` AS `event_name`,`osae_object_type_event`.`event_label` AS `event_label` from ((`osae_object` join `osae_object_type` on((`osae_object`.`object_type_id` = `osae_object_type`.`object_type_id`))) join `osae_object_type_event` on((`osae_object_type`.`object_type_id` = `osae_object_type_event`.`object_type_id`)));

--
-- Definition for view osae_v_object_event_script
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_event_script
AS
	select `osae_object_event_script`.`event_script_id` AS `event_script_id`,`osae_object_event_script`.`event_script` AS `event_script`,`osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object`.`state_id` AS `state_id`,`osae_object`.`object_type_id` AS `object_type_id`,`osae_object`.`object_value` AS `object_value`,`osae_object`.`address` AS `address`,`osae_object`.`container_id` AS `container_id`,`osae_object`.`enabled` AS `enabled`,`osae_object_type_event`.`event_id` AS `event_id`,`osae_object_type_event`.`event_name` AS `event_name`,`osae_object_type_event`.`event_label` AS `event_label` from ((`osae_object` join `osae_object_event_script` on((`osae_object`.`object_id` = `osae_object_event_script`.`object_id`))) join `osae_object_type_event` on((`osae_object_event_script`.`event_id` = `osae_object_type_event`.`event_id`)));

--
-- Definition for view osae_v_object_method
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_method
AS
	select `osae_object`.`object_name` AS `object_name`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object`.`object_id` AS `object_id`,`osae_object_type`.`object_type_id` AS `object_type_id`,`osae_object_type_method`.`method_name` AS `method_name`,`osae_object_type_method`.`method_label` AS `method_label`,`osae_object_type_method`.`param_1_label` AS `param_1_label`,`osae_object_type_method`.`param_2_label` AS `param_2_label`,`osae_object_type_method`.`param_1_default` AS `param_1_default`,`osae_object_type_method`.`param_2_default` AS `param_2_default`,`osae_object_type_method`.`method_id` AS `method_id` from ((`osae_object` left join `osae_object_type` on((`osae_object_type`.`object_type_id` = `osae_object`.`object_type_id`))) join `osae_object_type_method` on((`osae_object_type`.`object_type_id` = `osae_object_type_method`.`object_type_id`)));

--
-- Definition for view osae_v_object_property
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_property
AS
	select `osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object`.`state_id` AS `state_id`,`osae_object`.`object_value` AS `object_value`,`osae_object`.`address` AS `address`,`osae_object`.`container_id` AS `container_id`,`osae_object`.`enabled` AS `enabled`,`osae_object`.`last_updated` AS `object_last_updated`,coalesce(`osae_object`.`last_state_change`,now()) AS `last_state_change`,`osae_object_property`.`last_updated` AS `last_updated`,`osae_object_property`.`object_property_id` AS `object_property_id`,`osae_object_property`.`object_type_property_id` AS `object_type_property_id`,`osae_object_property`.`property_value` AS `property_value`,`osae_object_type`.`object_type_id` AS `object_type_id`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`system_hidden` AS `system_hidden`,`osae_object_type`.`plugin_object_id` AS `plugin_object_id`,`osae_object_type`.`base_type_id` AS `base_type_id`,`osae_object_type`.`object_type_owner` AS `object_type_owner`,`osae_object_type_property`.`property_datatype` AS `property_datatype`,`osae_object_type_property`.`property_name` AS `property_name`,`osae_object_type_property`.`property_id` AS `property_id`,`osae_object_type_property`.`track_history` AS `track_history`,`ot1`.`object_type` AS `base_type`,`osae_object_type_state`.`state_name` AS `state_name` from (((((`osae_object` join `osae_object_property` on((`osae_object`.`object_id` = `osae_object_property`.`object_id`))) join `osae_object_type` on((`osae_object`.`object_type_id` = `osae_object_type`.`object_type_id`))) join `osae_object_type_property` on(((`osae_object_type`.`object_type_id` = `osae_object_type_property`.`object_type_id`) and (`osae_object_property`.`object_type_property_id` = `osae_object_type_property`.`property_id`)))) left join `osae_object_type_state` on((`osae_object`.`state_id` = `osae_object_type_state`.`state_id`))) join `osae_object_type` `ot1` on((`osae_object_type`.`base_type_id` = `ot1`.`object_type_id`)));

--
-- Definition for view osae_v_object_property_array
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_property_array
AS
	select `osae_object_property_array`.`property_array_id` AS `property_array_id`,`osae_object_property_array`.`item_name` AS `item_name`,`osae_object_property_array`.`item_label` AS `item_label`,`osae_object_property`.`object_property_id` AS `object_property_id`,`osae_object_property`.`property_value` AS `property_value`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object_type_property`.`property_id` AS `property_id`,`osae_object_type_property`.`property_name` AS `property_name`,`osae_object_type_property`.`property_datatype` AS `property_datatype` from (((`osae_object_property_array` left join `osae_object_property` on((`osae_object_property_array`.`object_property_id` = `osae_object_property`.`object_property_id`))) join `osae_object` on((`osae_object_property`.`object_id` = `osae_object`.`object_id`))) join `osae_object_type_property` on((`osae_object_property`.`object_type_property_id` = `osae_object_type_property`.`property_id`)));

--
-- Definition for view osae_v_object_property_history
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_property_history
AS
	select `osae_object_property_history`.`history_id` AS `history_id`,`osae_object_property_history`.`property_value` AS `property_value`,`osae_object`.`object_name` AS `object_name`,`osae_object_type_property`.`property_name` AS `property_name`,`osae_object_type_property`.`property_datatype` AS `property_datatype`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object`.`object_description` AS `object_description` from ((((`osae_object_property_history` join `osae_object_property` on((`osae_object_property_history`.`object_property_id` = `osae_object_property`.`object_property_id`))) join `osae_object` on((`osae_object_property`.`object_id` = `osae_object`.`object_id`))) join `osae_object_type_property` on((`osae_object_property`.`object_type_property_id` = `osae_object_type_property`.`property_id`))) join `osae_object_type` on(((`osae_object`.`object_type_id` = `osae_object_type`.`object_type_id`) and (`osae_object_type_property`.`object_type_id` = `osae_object_type`.`object_type_id`))));

--
-- Definition for view osae_v_object_state
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_state
AS
	select `osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object`.`object_type_id` AS `object_type_id`,`osae_object`.`object_value` AS `object_value`,`osae_object`.`address` AS `address`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type`.`plugin_object_id` AS `plugin_object_id`,`osae_object_type`.`system_hidden` AS `system_hidden`,`osae_object_type_state`.`state_id` AS `state_id`,`osae_object_type_state`.`state_name` AS `state_name`,`osae_object_type_state`.`state_label` AS `state_label` from ((`osae_object` left join `osae_object_type` on((`osae_object_type`.`object_type_id` = `osae_object`.`object_type_id`))) join `osae_object_type_state` on((`osae_object_type`.`object_type_id` = `osae_object_type_state`.`object_type_id`)));

--
-- Definition for view osae_v_object_state_history
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_state_history
AS
	select `osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object`.`address` AS `address`,`osae_object_type_state`.`state_name` AS `state_name`,`osae_object_type_state`.`state_label` AS `state_label`,`osae_object_type_state`.`state_id` AS `state_id`,`osae_object_state_history`.`times_this_hour` AS `times_this_hour`,`osae_object_state_history`.`times_this_day` AS `times_this_day`,`osae_object_state_history`.`times_this_month` AS `times_this_month`,`osae_object_state_history`.`times_ever` AS `times_ever`,`osae_object_state_history`.`times_this_year` AS `times_this_year` from ((`osae_object` join `osae_object_state_history` on((`osae_object`.`object_id` = `osae_object_state_history`.`object_id`))) join `osae_object_type_state` on(((`osae_object_state_history`.`state_id` = `osae_object_type_state`.`state_id`) and (`osae_object`.`object_type_id` = `osae_object_type_state`.`object_type_id`))));

--
-- Definition for view osae_v_object_type
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_type
AS
	select `osae_object_type`.`object_type_id` AS `object_type_id`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type`.`plugin_object_id` AS `plugin_object_id`,`osae_object_type`.`system_hidden` AS `system_hidden`,`osae_object_type`.`object_type_owner` AS `object_type_owner`,`osae_object_type`.`base_type_id` AS `base_type_id`,`osae_object_type`.`container` AS `container`,`osae_object_type`.`hide_redundant_events` AS `hide_redundant_events`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`ot1`.`object_type` AS `base_type` from ((`osae_object_type` left join `osae_object` on((`osae_object`.`object_id` = `osae_object_type`.`plugin_object_id`))) left join `osae_object_type` `ot1` on((`osae_object_type`.`base_type_id` = `ot1`.`object_type_id`)));

--
-- Definition for view osae_v_object_type_event
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_type_event
AS
	select `osae_object_type_event`.`event_id` AS `event_id`,`osae_object_type_event`.`event_name` AS `event_name`,`osae_object_type_event`.`event_label` AS `event_label`,`osae_object_type_event`.`object_type_id` AS `object_type_id`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type`.`hide_redundant_events` AS `hide_redundant_events`,`osae_object_type`.`plugin_object_id` AS `plugin_object_id` from (`osae_object_type` join `osae_object_type_event` on((`osae_object_type`.`object_type_id` = `osae_object_type_event`.`object_type_id`)));

--
-- Definition for view osae_v_object_type_method
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_type_method
AS
	select `osae_object_type_method`.`method_id` AS `method_id`,`osae_object_type_method`.`method_name` AS `method_name`,`osae_object_type_method`.`method_label` AS `method_label`,`osae_object_type_method`.`object_type_id` AS `object_type_id`,`osae_object_type_method`.`param_1_label` AS `param_1_label`,`osae_object_type_method`.`param_2_label` AS `param_2_label`,`osae_object_type_method`.`param_1_default` AS `param_1_default`,`osae_object_type_method`.`param_2_default` AS `param_2_default`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type`.`plugin_object_id` AS `plugin_object_id`,`osae_object_type`.`system_hidden` AS `system_hidden` from (`osae_object_type` join `osae_object_type_method` on((`osae_object_type`.`object_type_id` = `osae_object_type_method`.`object_type_id`)));

--
-- Definition for view osae_v_object_type_property
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_type_property
AS
	select `osae_object_type_property`.`property_id` AS `property_id`,`osae_object_type_property`.`property_name` AS `property_name`,`osae_object_type_property`.`property_datatype` AS `property_datatype`,`osae_object_type_property`.`property_default` AS `property_default`,`osae_object_type_property`.`object_type_id` AS `object_type_id`,`osae_object_type_property`.`track_history` AS `track_history`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`plugin_object_id` AS `plugin_object_id`,`osae_object_type`.`object_type_description` AS `object_type_description`,`osae_object_type`.`system_hidden` AS `system_hidden` from (`osae_object_type` join `osae_object_type_property` on((`osae_object_type`.`object_type_id` = `osae_object_type_property`.`object_type_id`)));

--
-- Definition for view osae_v_object_type_state
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_object_type_state
AS
	select `osae_object_type_state`.`state_id` AS `state_id`,`osae_object_type_state`.`state_name` AS `state_name`,`osae_object_type_state`.`state_label` AS `state_label`,`osae_object_type`.`object_type` AS `object_type`,`osae_object_type`.`object_type_description` AS `object_type_description` from (`osae_object_type` join `osae_object_type_state` on((`osae_object_type`.`object_type_id` = `osae_object_type_state`.`object_type_id`)));

--
-- Definition for view osae_v_pattern
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_pattern
AS
	select `osae_pattern`.`pattern_id` AS `pattern_id`,`osae_pattern`.`pattern` AS `pattern`,`osae_pattern`.`script` AS `script`,`osae_pattern_match`.`match_id` AS `match_id`,`osae_pattern_match`.`match` AS `match` from (`osae_pattern` left join `osae_pattern_match` on((`osae_pattern`.`pattern_id` = `osae_pattern_match`.`pattern_id`)));

--
-- Definition for view osae_v_schedule_queue
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_schedule_queue
AS
	select `osae_schedule_queue`.`schedule_id` AS `schedule_id`,`osae_schedule_queue`.`queue_datetime` AS `queue_datetime`,`osae_schedule_queue`.`parameter_1` AS `parameter_1`,`osae_schedule_queue`.`parameter_2` AS `parameter_2`,`osae_pattern`.`pattern_id` AS `pattern_id`,`osae_pattern`.`pattern` AS `pattern`,`osae_pattern`.`script` AS `script`,`osae_object_type_method`.`method_id` AS `method_id`,`osae_object_type_method`.`method_name` AS `method_name`,`osae_object_type_method`.`method_label` AS `method_label`,`osae_object_type_method`.`param_1_label` AS `param_1_label`,`osae_object_type_method`.`param_2_label` AS `param_2_label`,`osae_object_type_method`.`param_1_default` AS `param_1_default`,`osae_object_type_method`.`param_2_default` AS `param_2_default`,`osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object`.`state_id` AS `state_id`,`osae_object`.`object_type_id` AS `object_type_id`,`osae_object`.`object_value` AS `object_value`,`osae_object`.`address` AS `address`,`osae_object`.`container_id` AS `container_id`,`osae_object`.`enabled` AS `enabled`,`osae_object`.`last_updated` AS `last_updated`,`osae_schedule_recurring`.`recurring_id` AS `recurring_id`,coalesce(`osae_schedule_recurring`.`schedule_name`,'One Time Execution') AS `schedule_name` from ((((`osae_schedule_queue` left join `osae_object` on((`osae_object`.`object_id` = `osae_schedule_queue`.`object_id`))) left join `osae_object_type_method` on((`osae_schedule_queue`.`method_id` = `osae_object_type_method`.`method_id`))) left join `osae_pattern` on((`osae_schedule_queue`.`pattern_id` = `osae_pattern`.`pattern_id`))) left join `osae_schedule_recurring` on((`osae_schedule_queue`.`recurring_id` = `osae_schedule_recurring`.`recurring_id`)));

--
-- Definition for view osae_v_schedule_recurring
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_schedule_recurring
AS
	select `osae_schedule_recurring`.`recurring_id` AS `recurring_id`,`osae_schedule_recurring`.`schedule_name` AS `schedule_name`,`osae_schedule_recurring`.`parameter_1` AS `parameter_1`,`osae_schedule_recurring`.`parameter_2` AS `parameter_2`,`osae_schedule_recurring`.`recurring_time` AS `recurring_time`,`osae_schedule_recurring`.`monday` AS `monday`,`osae_schedule_recurring`.`tuesday` AS `tuesday`,`osae_schedule_recurring`.`wednesday` AS `wednesday`,`osae_schedule_recurring`.`thursday` AS `thursday`,`osae_schedule_recurring`.`friday` AS `friday`,`osae_schedule_recurring`.`saturday` AS `saturday`,`osae_schedule_recurring`.`sunday` AS `sunday`,`osae_schedule_recurring`.`interval_unit` AS `interval_unit`,`osae_schedule_recurring`.`recurring_minutes` AS `recurring_minutes`,`osae_schedule_recurring`.`recurring_day` AS `recurring_day`,`osae_schedule_recurring`.`recurring_date` AS `recurring_date`,`osae_pattern`.`pattern_id` AS `pattern_id`,`osae_pattern`.`pattern` AS `pattern`,`osae_pattern`.`script` AS `script`,`osae_object_type_method`.`method_id` AS `method_id`,`osae_object_type_method`.`method_name` AS `method_name`,`osae_object_type_method`.`method_label` AS `method_label`,`osae_object_type_method`.`object_type_id` AS `object_type_id`,`osae_object_type_method`.`param_1_label` AS `param_1_label`,`osae_object_type_method`.`param_2_label` AS `param_2_label`,`osae_object_type_method`.`param_1_default` AS `param_1_default`,`osae_object_type_method`.`param_2_default` AS `param_2_default`,`osae_object`.`object_id` AS `object_id`,`osae_object`.`object_name` AS `object_name`,`osae_object`.`object_description` AS `object_description`,`osae_object`.`state_id` AS `state_id` from (((`osae_schedule_recurring` left join `osae_object` on((`osae_schedule_recurring`.`object_id` = `osae_object`.`object_id`))) left join `osae_pattern` on((`osae_schedule_recurring`.`pattern_id` = `osae_pattern`.`pattern_id`))) left join `osae_object_type_method` on((`osae_schedule_recurring`.`method_id` = `osae_object_type_method`.`method_id`)));

--
-- Definition for view osae_v_screen_object
--
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW osae_v_screen_object
AS
	select `so`.`screen_object_id` AS `screen_object_id`,`so`.`screen_id` AS `screen_id`,`so`.`object_id` AS `object_id`,`so`.`control_id` AS `control_id`,`screen`.`object_name` AS `screen_name`,`control`.`object_name` AS `control_name`,`o`.`object_name` AS `object_name`,`controltype`.`object_type` AS `control_type`,`controlbasetype`.`object_type` AS `control_base_type`,`o`.`last_updated` AS `last_updated`,`o`.`last_state_change` AS `last_state_change`,timestampdiff(MINUTE,`o`.`last_state_change`,now()) AS `time_in_state` from (((((`osae_screen_object` `so` join `osae_object` `screen` on((`screen`.`object_id` = `so`.`screen_id`))) join `osae_object` `control` on((`control`.`object_id` = `so`.`control_id`))) join `osae_object_type` `controltype` on((`controltype`.`object_type_id` = `control`.`object_type_id`))) join `osae_object_type` `controlbasetype` on((`controlbasetype`.`object_type_id` = `controltype`.`base_type_id`))) join `osae_object` `o` on((`o`.`object_id` = `so`.`object_id`)));

--
-- Definition for view osae_v_screen_updates
--
CREATE OR REPLACE 
	DEFINER = 'root'@'%'
VIEW osae_v_screen_updates
AS
	select `osae_v_screen_object`.`screen_object_id` AS `screen_object_id`,`osae_v_screen_object`.`screen_id` AS `screen_id`,`osae_v_screen_object`.`object_id` AS `object_id`,`osae_v_screen_object`.`control_id` AS `control_id`,`osae_v_screen_object`.`screen_name` AS `screen_name`,`osae_v_screen_object`.`control_name` AS `control_name`,`osae_v_screen_object`.`object_name` AS `object_name`,`osae_v_screen_object`.`last_updated` AS `last_updated`,`osae_v_screen_object`.`last_state_change` AS `last_state_change`,`osae_object_type_state`.`state_name` AS `state_name`,`osae_object_type_state`.`state_label` AS `state_label`,`osae_object_type_property`.`property_name` AS `property_name`,`osae_object_property`.`property_value` AS `property_value` from ((((`osae_object` left join `osae_object_type_state` on((`osae_object`.`state_id` = `osae_object_type_state`.`state_id`))) join `osae_v_screen_object` on((`osae_object`.`object_id` = `osae_v_screen_object`.`object_id`))) left join `osae_object_type_property` on((`osae_object_type_property`.`object_type_id` = `osae_object`.`object_type_id`))) left join `osae_object_property` on((`osae_object_type_property`.`property_id` = `osae_object_property`.`object_type_property_id`))) where (`osae_v_screen_object`.`last_updated` > subtime(now(),'00:00:30'));

DELIMITER $$

--
-- Definition for event osae_ev_day_timer
--
CREATE 
	DEFINER = 'root'@'localhost'
EVENT osae_ev_day_timer
	ON SCHEDULE EVERY '1' DAY
	STARTS '2011-01-19 23:59:59'
	DO 
BEGIN
  UPDATE osae_object_state_history
  SET
    times_this_day = 0;
END
$$

--
-- Definition for event osae_ev_hour_timer
--
CREATE 
	DEFINER = 'root'@'localhost'
EVENT osae_ev_hour_timer
	ON SCHEDULE EVERY '1' HOUR
	STARTS '2011-01-19 22:00:00'
	DO 
BEGIN
  UPDATE osae_object_state_history
  SET
    times_this_hour = 0;
END
$$

--
-- Definition for event osae_ev_minute_maint
--
CREATE 
	DEFINER = 'root'@'localhost'
EVENT osae_ev_minute_maint
	ON SCHEDULE EVERY '1' MINUTE
	STARTS '2010-06-08 21:39:17'
	DO 
BEGIN
  CALL osae_sp_object_property_set('SYSTEM', 'Date', curdate(), 'SYSTEM', 'osae_ev_minute_maint');
  CALL osae_sp_object_property_set('SYSTEM', 'Day Of Week', dayofweek(curdate()), 'SYSTEM', 'osae_ev_minute_maint');
  CALL osae_sp_object_property_set('SYSTEM', 'Day Of Month', dayofmonth(curdate()), 'SYSTEM', 'osae_ev_minute_maint');
  CALL osae_sp_run_scheduled_methods;
  CALL osae_sp_debug_log_add('Minute timer', 'SYSTEM');
END
$$

--
-- Definition for event osae_ev_month_timer
--
CREATE 
	DEFINER = 'root'@'localhost'
EVENT osae_ev_month_timer
	ON SCHEDULE EVERY '1' MONTH
	STARTS '2011-02-01 12:00:00'
	DO 
BEGIN
  UPDATE osae_object_state_history
  SET
    times_this_month = 0;
END
$$

--
-- Definition for event osae_ev_off_timer
--
CREATE 
	DEFINER = 'root'@'localhost'
EVENT osae_ev_off_timer
	ON SCHEDULE EVERY '1' SECOND
	STARTS '2010-05-23 10:09:24'
	DO 
BEGIN
  DECLARE vObjectName  VARCHAR(200);
  DECLARE iLoopCount   INT DEFAULT 0;
  DECLARE iMethodCount INT DEFAULT 0;
  DECLARE iStateCount  INT DEFAULT 0;
  DECLARE done         INT DEFAULT 0;
  DECLARE cur1 CURSOR FOR SELECT object_name
                          FROM
                            osae_v_object_property
                          WHERE
                            state_name <> 'OFF'
                            AND property_name = 'OFF TIMER'
                            AND property_value IS NOT NULL
                            AND property_value <> ''
                            AND subtime(now(), sec_to_time(property_value)) > object_last_updated;
  DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;

  CALL osae_sp_object_property_set('SYSTEM', 'Time', curtime(), 'SYSTEM', 'osae_ev_off_timer');
  CALL osae_sp_object_property_set('SYSTEM', 'Time AMPM', DATE_FORMAT(now(), '%h:%i %p'), 'SYSTEM', 'osae_ev_off_timer');
  CALL osae_sp_system_count_occupants();
  SELECT count(object_name)
  INTO
    iLoopCount
  FROM
    osae_v_object_property
  WHERE
    state_name <> 'OFF'
    AND property_name = 'OFF TIMER'
    AND property_value IS NOT NULL
    AND property_value <> ''
    AND subtime(now(), sec_to_time(property_value)) > object_last_updated;
  OPEN cur1;

Loop_Tag:
  LOOP
    FETCH cur1 INTO vObjectName;
    IF done THEN
      LEAVE Loop_Tag;
    END IF;
    SELECT count(method_id)
    INTO
      iMethodCount
    FROM
      osae_v_object_method
    WHERE
      upper(object_name) = upper(vObjectName)
      AND upper(method_name) = 'OFF';
    IF iMethodCount > 0 THEN
      CALL osae_sp_debug_log_add(concat('Turning ', vObjectName, ' Off'), 'osae_ev_off_timer');
      CALL osae_sp_method_queue_add(vObjectName, 'OFF', '', '', 'SYSTEM', 'osae_ev_off_timer');
    ELSE
      SELECT count(state_id)
      INTO
        iStateCount
      FROM
        osae_v_object_state
      WHERE
        upper(object_name) = upper(vObjectName)
        AND upper(state_name) = 'OFF';
      IF iStateCount > 0 THEN
        CALL osae_sp_debug_log_add(concat('Turning ', vObjectName, ' Off'), 'osae_ev_off_timer');
        CALL osae_sp_object_state_set(vObjectName, 'OFF', 'SYSTEM', 'osae_ev_off_timer');
      END IF;
    END IF;
  END LOOP;
  CLOSE cur1;
END
$$

--
-- Definition for event osae_ev_year_timer
--
CREATE 
	DEFINER = 'root'@'localhost'
EVENT osae_ev_year_timer
	ON SCHEDULE AT '2012-01-01 01:00:00'
	DO 
BEGIN
  UPDATE osae_object_state_history
  SET
    times_this_yeart = 0;
END
$$

DELIMITER ;

-- 
-- Dumping data for table osae_debug_log
--
INSERT INTO osae_debug_log VALUES 
  (0003984190, '2011-10-14 19:44:17', 'Minute timer', 'SYSTEM'),
  (0003984191, '2011-10-14 19:45:17', 'Minute timer', 'SYSTEM'),
  (0003984192, '2011-10-14 19:46:17', 'Minute timer', 'SYSTEM'),
  (0003984193, '2011-10-14 19:47:17', 'Minute timer', 'SYSTEM'),
  (0003984194, '2011-10-14 19:48:18', 'Minute timer', 'SYSTEM'),
  (0003984195, '2011-10-14 19:49:17', 'Minute timer', 'SYSTEM');

-- 
-- Dumping data for table osae_object_pattern
--
-- Table does not contain any data (it is empty)

-- 
-- Dumping data for table osae_object_type
--
INSERT INTO osae_object_type VALUES 
  (0000000023, 'PLUGIN', 'Generic Plugin Class', NULL, 1, 1, 0000000023, 0, 1),
  (0000000024, 'PLACE', 'Core Type: Locations', 0000000043, 1, 0, 0000000024, 1, 1),
  (0000000025, 'PERSON', 'Core Type: People', 0000000043, 1, 0, 0000000025, 0, 1),
  (0000000026, 'THING', 'Core Type: Things', 0000000009, 1, 0, 0000000026, 0, 1),
  (0000000034, 'WEATHER PLUGIN', 'Weather Plugin', 0000000005, 0, 1, 0000000023, 0, 1),
  (0000000035, 'BLUETOOTH', 'Bluetooth Plugin', NULL, 0, 1, 0000000023, 0, 1),
  (0000000036, 'BLUETOOTH DEVICE', 'Bluetooth Device', 0000000007, 0, 0, 0000000036, 0, 1),
  (0000000037, 'NETWORK MONITOR', 'Network Monitor Plugin', NULL, 0, 1, 0000000023, 0, 1),
  (0000000038, 'NETWORK DEVICE', 'Network Device', 0000000008, 0, 0, 0000000038, 0, 1),
  (0000000039, 'SYSTEM', 'Core System Data', 0000000043, 1, 1, 0000000039, 1, 1),
  (0000000040, 'CM15A', 'X10 Plugin Class', NULL, 0, 1, 0000000023, 0, 1),
  (0000000042, 'X10 DIMMER', 'X10 Dimmer', NULL, 1, 1, 0000000042, 0, 0),
  (0000000043, 'ALBUM', 'Core Type: Album', 0000000009, 0, 0, 0000000043, 0, 1),
  (0000000045, 'CONTAINER', 'Core Type: Container', 0000000009, 0, 0, 0000000045, 1, 1),
  (0000000046, 'MUSIC', 'Core Type: Music', 0000000009, 0, 0, 0000000045, 1, 1),
  (0000000047, 'ANIMAL', 'Core Type: Animal', 0000000043, 1, 0, 0000000047, 0, 1),
  (0000000049, 'EMAIL', 'Email Plugin', NULL, 0, 1, 0000000023, 0, 1),
  (0000000050, 'GUI CLIENT', 'Touch Screen App', NULL, 1, 1, 0000000050, 0, 1),
  (0000000051, 'SCREEN', 'Core Type: Display Screen', NULL, 1, 0, 0000000051, 1, 1),
  (0000000052, 'COMPUTER', 'Core Type: Computer', 0000000009, 1, 0, 0000000026, 0, 1),
  (0000000053, 'CONTROL', 'Core Type: Display control', NULL, 1, 0, 0000000053, 0, 1),
  (0000000054, 'CONTROL STATE IMAGE', 'Control - Object State', NULL, 1, 0, 0000000053, 0, 1),
  (0000000057, 'SQUEEZEBOX', 'Squeezebox Device', NULL, 0, 0, 0000000057, 0, 1),
  (0000000058, 'SPEECH', 'Generic Plugin Class', NULL, 1, 1, 0000000023, 0, 1),
  (0000000059, 'X10 SENSOR', 'X10 Sensor (MS16A, etc)', 0000000050, 1, 1, 0000000059, 0, 0),
  (0000000060, 'SCRIPT PROCESSOR', 'Generic Plugin Class', NULL, 0, 1, 0000000023, 0, 1),
  (0000000061, 'W800RF', 'Generic Plugin Class', NULL, 1, 1, 0000000023, 0, 1),
  (0000000062, 'USBUIRT', 'USBUIRT Plugin', NULL, 1, 1, 0000000023, 0, 1),
  (0000000063, 'CONTROL PROPERTY LABEL', 'Control - Property Value', NULL, 1, 0, 0000000053, 0, 1),
  (0000000064, 'CONTROL STATIC LABEL', 'Control - Static Text Label', NULL, 1, 0, 0000000053, 0, 1),
  (0000000065, 'CONTROL METHOD IMAGE', 'Control - Static Text Label', NULL, 1, 0, 0000000053, 0, 1),
  (0000000066, 'CONTROL NAVIGATION IMAGE', 'Control - Navigation Image', NULL, 1, 0, 0000000053, 0, 1),
  (0000000068, 'LIST', 'Core Datatype: List', 0000000043, 1, 0, 0000000068, 0, 1),
  (0000000069, 'SPEECH LIST', 'Speech List', NULL, 0, 0, 0000000068, 0, 1),
  (0000000070, 'FILE LIST', 'File List', NULL, 0, 0, 0000000068, 0, 1),
  (0000000072, 'X10 RELAY', 'X10 Dimmer', 0000000050, 1, 1, 0000000072, 0, 0),
  (0000000073, 'X10 DS10A', 'X10 DS10A', 0000000050, 1, 1, 0000000073, 0, 1),
  (0000000074, 'INSTEON', 'INSTEON', NULL, 1, 1, 0000000023, 0, 1),
  (0000000075, 'JABBER', 'Jabber Plugin', NULL, 1, 1, 0000000023, 0, 1),
  (0000000077, 'ZWAVE', 'ZWave Plugin', 0000000222, 1, 1, 0000000023, 0, 1),
  (0000000078, 'ZWAVE BINARY SWITCH', 'ZWave Binary Switch', 0000000339, 0, 0, 0000000078, 0, 1),
  (0000000079, 'ZWAVE DIMMER', 'ZWave Dimmer', 0000000339, 0, 0, 0000000079, 0, 1),
  (0000000080, 'INSTEON APPLIANCELINC', 'Insteon Appliancelinc', 0000000213, 1, 0, 0000000080, 0, 0),
  (0000000081, 'CM11A', 'X10 Plugin Class', NULL, 0, 1, 0000000023, 0, 1),
  (0000000083, 'WEB SERVER', 'OSA Web Server Plugin', NULL, 0, 1, 0000000023, 0, 1),
  (0000000085, 'WEATHER', 'Weather Data', NULL, 1, 0, 0000000085, 0, 1),
  (0000000086, 'SERVICE', 'OSA Service', NULL, 1, 0, 0000000086, 0, 1),
  (0000000087, 'USER CONTROL', 'User Control', 0000000043, 1, 0, 0000000053, 0, 1),
  (0000000088, 'USER CONTROL WEATHER', 'User Control', 0000000043, 1, 0, 0000000087, 0, 1),
  (0000000089, 'CONTROL TIMER LABEL', 'Control - Timer Label', NULL, 1, 0, 0000000053, 0, 1);

-- 
-- Dumping data for table osae_pattern
--
INSERT INTO osae_pattern VALUES 
  (1, 'Greetings', 'SPEECH-VanMain.Run Method.Say.Hello Master\r\nJabber-VanMain.Run Method.Send Message.SCRIPT.PARAMETER,Hello'),
  (2, 'Vaughn - Welcome', 'Vaughn.Run Method.Arriving\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'),
  (3, 'Vaughn Is Gone', 'Vaughn.Run Method.Leaving\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'),
  (4, 'Time', 'SPEECH-VanMain.Run Method.Say.''The Time is [SYSTEM.Time AMPM] and the house is currently in [SYSTEM.State] mode''\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n'),
  (5, 'Home Mode', 'SYSTEM.Run Method.Set State to Home\r\n\n\r\n\n\r\n\n\r\n\n\r\n\n\r\n\n\r\n\n\r\n\n\r\n\n\r\n'),
  (6, 'Away Mode', 'SYSTEM.Run Method.Set State to Away\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'),
  (7, 'Thanks', 'SPEECH-VanMain.Run Method.Say From List.Speech List,Thanks\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n'),
  (8, 'Count Occupants', 'SPEECH-VanMain.Run Method.Say.''There are [SYSTEM.Occupants] occupants here''\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n\n\n\r\n'),
  (9, 'Weather - Today', 'SPEECH-VanMain.Run Method.Say From List.Speech List,Weather - Current\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'),
  (10, 'Weather - Tomorrow', ''),
  (11, 'Eric - Arriving', 'Eric.Run Method.Arriving\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'),
  (12, 'Eric - Leaving', 'Eric.Run Method.Leaving\r\n\n\r\n\n\r\n\n\r\n\n\r\n\n\r\n\n\r\n\n\r\n\n\r\n\n\r\n'),
  (13, 'Who is here', 'SPEECH-VanMain.Run Method.Say.''[SYSTEM.Occupant String]''\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'),
  (14, 'How are you', ''),
  (15, 'Your mama', 'SPEECH-VanMain.Run Method.Say From List.Speech List,Your Mama\r\nSPEECH-DVR1.Run Method.Say From List.Speech List,Your Mama\r\nJabber-VanMain.Run Method.Send From List.SCRIPT.PARAMETER,Your mama'),
  (16, 'Is Vaughn here', 'IF Vaughn.State = ON THEN\r\nSPEECH-VanMain.Run Method.Say.Yes\r\nELSEIF Vaughn.State <> ON THEN\r\nSPEECH-VanMain.Run Method.Say.No\r\nEND IF\r\n\r\n\r\n\r\n\r\n\r\n'),
  (17, 'Is Eric here', 'IF Eric.State = ON THEN\r\nSPEECH-VanMain.Run Method.Say.Yes\r\nELSEIF Eric.State <> ON THEN\r\nSPEECH-VanMain.Run Method.Say.No\r\nEND IF\r\n\r\n\r\n\r\n\r\n\r\n'),
  (18, 'Security Mode', 'SPEECH-VanMain.Run Method.Say.''I am currently in [SYSTEM.State] mode''\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n');

-- 
-- Dumping data for table osae_pattern_match
--
INSERT INTO osae_pattern_match VALUES 
  (3, 1, 'Hello'),
  (5, 1, 'Hi'),
  (6, 1, 'Greetings'),
  (7, 2, 'Vaughn is here'),
  (8, 2, 'Vaughn is home'),
  (9, 3, 'Vaughn is leaving'),
  (10, 3, 'Vaughn is gone'),
  (11, 4, 'Time'),
  (12, 4, 'What time is it'),
  (13, 4, 'what is the time'),
  (14, 5, 'Disarm the house'),
  (15, 5, 'Home mode'),
  (16, 5, 'set the house to home'),
  (17, 5, 'change mode to home'),
  (18, 6, 'Set house to away'),
  (19, 6, 'Set system to away'),
  (20, 6, 'Away mode'),
  (21, 6, 'Arm the system'),
  (22, 6, 'Arm the house'),
  (23, 7, 'Thanks'),
  (24, 7, 'Thank You'),
  (25, 8, 'How many people are here'),
  (26, 8, 'How many occupants are here'),
  (27, 8, 'role call'),
  (28, 8, 'count occupants'),
  (29, 9, 'Current Weather'),
  (30, 9, 'What is weather like'),
  (31, 10, 'Tell me about tomorrow''s weather'),
  (32, 10, 'what will the weather be like tomorrow'),
  (33, 11, 'Eric is here'),
  (34, 11, 'Eric is home'),
  (35, 12, 'Eric is leaving'),
  (36, 12, 'Eric left'),
  (37, 12, 'Eric is gone'),
  (38, 12, 'Eric is not here'),
  (39, 3, 'Vaughn is not here'),
  (40, 3, 'Vaughn left'),
  (41, 13, 'Who is here'),
  (42, 13, 'Who is in the house'),
  (43, 14, 'How are you'),
  (44, 14, 'How are you doing'),
  (45, 15, 'Your mama'),
  (46, 16, 'Is Vaughn here'),
  (47, 16, 'Is Vaughn home'),
  (48, 17, 'Is Eric here'),
  (49, 17, 'Is Eric home'),
  (50, 18, 'Security Mode'),
  (51, 18, 'What mode is the house in'),
  (52, 18, 'What mode are you in'),
  (53, 15, 'Your momma');

-- 
-- Dumping data for table osae_object_type_event
--
INSERT INTO osae_object_type_event VALUES 
  (0000000001, 'ON', 'Started', 0000000023),
  (0000000002, 'OFF', 'Stopped', 0000000023),
  (0000000003, 'ON', 'Arrived', 0000000025),
  (0000000004, 'OFF', 'Left', 0000000025),
  (0000000007, 'ON', 'Occupied', 0000000024),
  (0000000008, 'OFF', 'Vacated', 0000000024),
  (0000000019, 'ON', 'Started', 0000000034),
  (0000000020, 'OFF', 'Stopped', 0000000034),
  (0000000021, 'ON', 'Enabled', 0000000035),
  (0000000022, 'OFF', 'Disabled', 0000000035),
  (0000000023, 'ON', 'Arrived', 0000000036),
  (0000000024, 'OFF', 'Left', 0000000036),
  (0000000025, 'ON', 'Started', 0000000037),
  (0000000026, 'OFF', 'Stopped', 0000000037),
  (0000000027, 'ON', 'On-Line', 0000000038),
  (0000000028, 'OFF', 'Off-Line', 0000000038),
  (0000000034, 'ON', 'Started', 0000000040),
  (0000000035, 'OFF', 'Stopped', 0000000040),
  (0000000037, 'ON', 'On', 0000000026),
  (0000000038, 'OFF', 'Off', 0000000026),
  (0000000039, 'ON', 'On', 0000000042),
  (0000000040, 'OFF', 'Off', 0000000042),
  (0000000045, 'ON', 'Started', 0000000049),
  (0000000046, 'OFF', 'Stopped', 0000000049),
  (0000000047, 'EMAIL SENT', 'Email Sent', 0000000049),
  (0000000048, 'ON', 'ON', 0000000046),
  (0000000049, 'ON', 'Started', 0000000050),
  (0000000050, 'OFF', 'Stopped', 0000000050),
  (0000000051, 'ON', 'On', 0000000052),
  (0000000052, 'OFF', 'Off', 0000000052),
  (0000000054, 'ON', 'On', 0000000057),
  (0000000055, 'OFF', 'Off', 0000000057),
  (0000000056, 'ON', 'Started', 0000000058),
  (0000000057, 'OFF', 'Stopped', 0000000058),
  (0000000059, 'ON', 'On', 0000000059),
  (0000000060, 'OFF', 'Off', 0000000059),
  (0000000062, 'ON', 'Started', 0000000060),
  (0000000063, 'OFF', 'Stopped', 0000000060),
  (0000000065, 'ON', 'Started', 0000000061),
  (0000000066, 'OFF', 'Stopped', 0000000061),
  (0000000067, 'ON', 'Started', 0000000062),
  (0000000068, 'OFF', 'Stopped', 0000000062),
  (0000000074, 'OCCUPANTS', 'Set Occupants', 0000000039),
  (0000000075, 'AWAY', 'State Set to Away', 0000000039),
  (0000000076, 'HOME', 'State Set to Home', 0000000039),
  (0000000077, 'SLEEP', 'State Set to Sleep', 0000000039),
  (0000000078, 'ON', 'On', 0000000072),
  (0000000079, 'OFF', 'Off', 0000000072),
  (0000000080, 'OCCUPIED LOCATIONS', 'Occupied Locations Set', 0000000039),
  (0000000081, 'ON', 'Started', 0000000075),
  (0000000082, 'OFF', 'Stopped', 0000000075),
  (0000000085, 'ON', 'Started', 0000000077),
  (0000000086, 'OFF', 'Stopped', 0000000077),
  (0000000087, 'ON', 'On', 0000000078),
  (0000000088, 'OFF', 'Off', 0000000078),
  (0000000089, 'ON', 'On', 0000000079),
  (0000000090, 'OFF', 'Off', 0000000079),
  (0000000091, 'ON', 'On', 0000000074),
  (0000000092, 'OFF', 'Off', 0000000074),
  (0000000093, 'ON', 'On', 0000000080),
  (0000000094, 'OFF', 'Off', 0000000080),
  (0000000103, 'OPENED', 'Opened', 0000000073),
  (0000000104, 'CLOSED', 'Closed', 0000000073),
  (0000000105, 'ON', 'Started', 0000000081),
  (0000000106, 'OFF', 'Stopped', 0000000081),
  (0000000109, 'ON', 'Started', 0000000083),
  (0000000110, 'OFF', 'Stopped', 0000000083),
  (0000000113, 'ON', 'Updated', 0000000085),
  (0000000114, 'OFF', 'Hung', 0000000085),
  (0000000115, 'ON', 'Started', 0000000086),
  (0000000116, 'OFF', 'Stopped', 0000000086);

-- 
-- Dumping data for table osae_object_type_method
--
INSERT INTO osae_object_type_method VALUES 
  (0000000001, 'ON', 'Start', 0000000023, NULL, NULL, NULL, NULL),
  (0000000002, 'OFF', 'Stop', 0000000023, NULL, NULL, NULL, NULL),
  (0000000003, 'ON', 'Arriving', 0000000025, NULL, NULL, NULL, NULL),
  (0000000004, 'OFF', 'Leaving', 0000000025, NULL, NULL, NULL, NULL),
  (0000000007, 'ON', 'Occupy', 0000000024, NULL, NULL, NULL, NULL),
  (0000000008, 'OFF', 'Vacate', 0000000024, NULL, NULL, NULL, NULL),
  (0000000019, 'ON', 'Start', 0000000034, NULL, NULL, NULL, NULL),
  (0000000020, 'OFF', 'Stop', 0000000034, NULL, NULL, NULL, NULL),
  (0000000021, 'ON', 'Enable', 0000000035, NULL, NULL, NULL, NULL),
  (0000000022, 'OFF', 'Disable', 0000000035, NULL, NULL, NULL, NULL),
  (0000000023, 'ON', 'Arriving', 0000000036, NULL, NULL, NULL, NULL),
  (0000000024, 'OFF', 'Leaving', 0000000036, NULL, NULL, NULL, NULL),
  (0000000025, 'ON', 'Start', 0000000037, NULL, NULL, NULL, NULL),
  (0000000026, 'OFF', 'Stop', 0000000037, NULL, NULL, NULL, NULL),
  (0000000032, 'ON', 'Start', 0000000040, '', '', '', ''),
  (0000000033, 'OFF', 'Stop', 0000000040, '', '', '', ''),
  (0000000035, 'ON', 'On', 0000000026, NULL, NULL, NULL, NULL),
  (0000000036, 'OFF', 'Off', 0000000026, NULL, NULL, NULL, NULL),
  (0000000037, 'ON', 'On', 0000000042, 'Dim Level in %', '', '100', ''),
  (0000000038, 'OFF', 'Off', 0000000042, '', '', '', ''),
  (0000000043, 'ON', 'Start', 0000000049, NULL, NULL, NULL, NULL),
  (0000000044, 'OFF', 'Stop', 0000000049, '', '', '', ''),
  (0000000045, 'SEND EMAIL', 'Send Email', 0000000049, 'TO', 'Message', 'vaughnrupp@yahoo.com', 'Test Message'),
  (0000000046, 'ON', 'ON', 0000000046, NULL, NULL, NULL, NULL),
  (0000000047, 'SCREEN SET', 'Screen Set', 0000000050, 'Screen Name', '', NULL, NULL),
  (0000000048, 'ON', 'On', 0000000052, NULL, NULL, NULL, NULL),
  (0000000049, 'OFF', 'Off', 0000000052, NULL, NULL, NULL, NULL),
  (0000000052, 'PLAY', 'Play', 0000000057, 'Item', '', NULL, NULL),
  (0000000053, 'STOP', 'Stop', 0000000057, '', '', NULL, NULL),
  (0000000054, 'SHOW', 'Display Message', 0000000057, 'message', '', NULL, NULL),
  (0000000055, 'ON', 'On', 0000000058, '', '', '', ''),
  (0000000056, 'OFF', 'Off', 0000000058, '', '', '', ''),
  (0000000058, 'SPEAK', 'Say', 0000000058, 'Message', '', 'Hello', ''),
  (0000000062, 'ON', 'Start', 0000000060, NULL, NULL, NULL, NULL),
  (0000000063, 'OFF', 'Stop', 0000000060, NULL, NULL, NULL, NULL),
  (0000000065, 'EVENT SCRIPT', 'Run Event Script', 0000000060, 'Event ID', '', '', ''),
  (0000000066, 'ON', 'Start', 0000000061, NULL, NULL, NULL, NULL),
  (0000000067, 'OFF', 'Stop', 0000000061, NULL, NULL, NULL, NULL),
  (0000000069, 'SET PORT', 'Set ComPort', 0000000061, 'ComPort', '', '4', ''),
  (0000000070, 'SET DEBOUNCE', 'Set Debounce', 0000000061, 'Inteval in ms', '', '90', ''),
  (0000000071, 'ON', 'Start', 0000000062, NULL, NULL, NULL, NULL),
  (0000000072, 'OFF', 'Stop', 0000000062, NULL, NULL, NULL, NULL),
  (0000000074, 'TRANSMIT', 'Transmit', 0000000062, 'IR Code', '', '', ''),
  (0000000075, 'OCCUPANTS', 'Set Occupants', 0000000039, 'Number of Occupants', '', '0', ''),
  (0000000076, 'AWAY', 'Set State to Away', 0000000039, '', '', '', ''),
  (0000000077, 'HOME', 'Set State to Home', 0000000039, '', '', '', ''),
  (0000000078, 'SLEEP', 'Set State to Sleep', 0000000039, '', '', '', ''),
  (0000000079, 'SPEAKFROM', 'Say From List', 0000000058, 'Object Name', 'Property Name', 'Speech List', 'Greetings'),
  (0000000080, 'PLAY', 'Play', 0000000058, 'File', '', '', ''),
  (0000000081, 'PLAYFROM', 'Play From List', 0000000058, 'List', '', '', ''),
  (0000000082, 'STOP', 'Stop', 0000000058, '', '', '', ''),
  (0000000083, 'PAUSE', 'Pause', 0000000058, '', '', '', ''),
  (0000000084, 'PATTERN SCRIPT', 'Run Pattern Script', 0000000060, 'Pattern ID', '', '', ''),
  (0000000085, 'ON', 'On', 0000000072, NULL, NULL, NULL, NULL),
  (0000000086, 'OFF', 'Off', 0000000072, NULL, NULL, NULL, NULL),
  (0000000087, 'SEND MESSAGE', 'Send Message', 0000000075, 'To', 'Message', '', ''),
  (0000000088, 'SEND FROM LIST', 'Send From List', 0000000075, 'To', 'List', '', ''),
  (0000000093, 'ON', 'Start', 0000000077, '', '', '', ''),
  (0000000094, 'OFF', 'Stop', 0000000077, '', '', '', ''),
  (0000000095, 'ON', 'On', 0000000078, '', '', '', ''),
  (0000000096, 'OFF', 'Off', 0000000078, '', '', '', ''),
  (0000000097, 'ON', 'On', 0000000079, 'Level', '100', '', ''),
  (0000000098, 'OFF', 'Off', 0000000079, '', '', '', ''),
  (0000000099, 'ON', 'On', 0000000080, NULL, NULL, NULL, NULL),
  (0000000100, 'OFF', 'Off', 0000000080, NULL, NULL, NULL, NULL),
  (0000000101, 'MUTEVR', 'Mute the Microphone', 0000000058, '', '', '', ''),
  (0000000104, 'SETVOICE', 'Set Voice', 0000000058, 'Voice', '', 'Anna', ''),
  (0000000105, 'UPDATE', 'Update', 0000000034, '', '', '', ''),
  (0000000114, 'DEBOUNCE', 'Set Debounce Time', 0000000040, 'Time in ms', '', '120', ''),
  (0000000115, 'DEBUG MODE', 'Set Debug Mode', 0000000040, 'TRUE/FALSE', '', 'FALSE', ''),
  (0000000116, 'TRANSMIT ONLY', 'Set Transmit Only', 0000000040, 'TRUE / FALSE', '', 'FALSE', ''),
  (0000000117, 'TRANSMIT RF', 'Set Transmit RF', 0000000040, 'TRUE / FALSE', '', 'FALSE', ''),
  (0000000120, 'BRIGHT', 'Bright', 0000000042, 'Increment %', '', '10', ''),
  (0000000121, 'DIM', 'Dim', 0000000042, 'Decrement %', '', '10', ''),
  (0000000122, 'ON', 'Start', 0000000081, '', '', '', ''),
  (0000000123, 'OFF', 'Stop', 0000000081, '', '', '', ''),
  (0000000124, 'CLEAR', 'Clear CM11A Memory', 0000000081, '', '', '', ''),
  (0000000125, 'RESET', 'Reset the CM11A', 0000000081, '', '', '', ''),
  (0000000126, 'SET POLL RATE', 'Set CM11a Poll Rate', 0000000081, 'Rate in ms', '', '30000', ''),
  (0000000127, 'SET LEARNING MODE', 'Set Learning Mode', 0000000081, 'TRUE/FALSE', '', 'TRUE', ''),
  (0000000134, 'ON', 'Start', 0000000083, '', '', '', ''),
  (0000000135, 'OFF', 'Stop', 0000000083, '', '', '', ''),
  (0000000138, 'ON', 'Updated', 0000000085, '', '', '', ''),
  (0000000139, 'OFF', 'Hung', 0000000085, '', '', '', ''),
  (0000000140, 'EXECUTE', 'Execute Command', 0000000086, 'Program', 'Arguments', '', '');

-- 
-- Dumping data for table osae_object_type_property
--
INSERT INTO osae_object_type_property VALUES 
  (0000000025, 'Port', 'Integer', '', 0000000023, 0),
  (0000000026, 'Email Address', 'String', '', 0000000025, 0),
  (0000000027, 'Home Phone', 'String', '', 0000000025, 0),
  (0000000028, 'Mobile Phone', 'String', '', 0000000025, 0),
  (0000000029, 'Birthdate', 'DateTime', '', 0000000025, 0),
  (0000000057, 'Feed URL', 'String', '', 0000000034, 0),
  (0000000058, 'Zipcode', 'String', '', 0000000034, 0),
  (0000000059, 'Update Interval', 'String', '30', 0000000034, 0),
  (0000000060, 'Scan Interval', 'Integer', '60', 0000000035, 0),
  (0000000061, 'Discover Length', 'Integer', '8', 0000000035, 0),
  (0000000062, 'Learning Mode', 'Boolean', 'TRUE', 0000000035, 0),
  (0000000063, 'Discover Type', 'String', '', 0000000036, 0),
  (0000000067, 'Occupants', 'Integer', '', 0000000039, 1),
  (0000000068, 'ZIP Code', 'String', '', 0000000039, 0),
  (0000000069, 'Latitude', 'Integer', '', 0000000039, 0),
  (0000000070, 'Longitude', 'Integer', '', 0000000039, 0),
  (0000000071, 'Date', 'DateTime', '', 0000000039, 0),
  (0000000072, 'Time', 'DateTime', '', 0000000039, 0),
  (0000000073, 'Day Of Week', 'Integer', '', 0000000039, 0),
  (0000000074, 'Violations', 'Integer', '', 0000000039, 0),
  (0000000096, 'Artist', 'String', '', 0000000043, 0),
  (0000000097, 'Year', 'DateTime', '', 0000000043, 0),
  (0000000104, 'SMTP Server', 'String', '', 0000000049, 0),
  (0000000105, 'SMTP Port', 'String', '', 0000000049, 0),
  (0000000106, 'ssl', 'Boolean', '', 0000000049, 0),
  (0000000107, 'Username', 'String', '', 0000000049, 0),
  (0000000108, 'Password', 'String', '', 0000000049, 0),
  (0000000109, 'From Address', 'String', '', 0000000049, 0),
  (0000000114, 'ON', 'String', '', 0000000046, 0),
  (0000000115, 'Background Image', 'File', '', 0000000051, 0),
  (0000000116, 'Current Screen', 'String', '', 0000000050, 0),
  (0000000117, 'Host Name', 'String', '', 0000000052, 0),
  (0000000119, 'OS', 'String', '', 0000000052, 0),
  (0000000120, 'Computer Name', 'String', '', 0000000050, 0),
  (0000000121, 'Computer Name', 'String', '', 0000000023, 0),
  (0000000122, 'Object Name', 'String', '', 0000000054, 0),
  (0000000129, 'Computer Name', 'Integer', '', 0000000040, 0),
  (0000000130, 'Computer Name', 'String', '', 0000000035, 0),
  (0000000134, 'Computer Name', 'String', '', 0000000058, 0),
  (0000000139, 'Port', 'Integer', '', 0000000061, 0),
  (0000000140, 'Computer Name', 'String', '', 0000000061, 0),
  (0000000142, 'Learning Mode', 'Boolean', 'TRUE', 0000000061, 0),
  (0000000143, 'Debounce', 'Integer', '120', 0000000061, 0),
  (0000000145, 'Computer Name', 'String', '', 0000000062, 0),
  (0000000147, 'State 1 Name', 'String', '', 0000000054, 0),
  (0000000148, 'State 2 Name', 'String', '', 0000000054, 0),
  (0000000149, 'State 3 Name', 'String', '', 0000000054, 0),
  (0000000150, 'State 1 Image', 'File', '', 0000000054, 0),
  (0000000151, 'State 2 Image', 'File', '', 0000000054, 0),
  (0000000152, 'State 3 Image', 'File', '', 0000000054, 0),
  (0000000153, 'State 1 X', 'Integer', '', 0000000054, 0),
  (0000000154, 'State 1 Y', 'Integer', '', 0000000054, 0),
  (0000000155, 'State 2 X', 'Integer', '', 0000000054, 0),
  (0000000156, 'State 2 Y', 'Integer', '', 0000000054, 0),
  (0000000157, 'State 3 X', 'Integer', '', 0000000054, 0),
  (0000000158, 'State 3 Y', 'Integer', '', 0000000054, 0),
  (0000000159, 'ZOrder', 'Integer', '', 0000000054, 0),
  (0000000160, 'OFF TIMER', 'Integer', '', 0000000024, 0),
  (0000000161, 'Object Name', 'String', '', 0000000063, 0),
  (0000000162, 'Property Name', 'String', '', 0000000063, 0),
  (0000000163, 'X', 'Integer', '', 0000000063, 0),
  (0000000164, 'Y', 'Integer', '', 0000000063, 0),
  (0000000165, 'Font Name', 'String', '', 0000000063, 0),
  (0000000166, 'Font Size', 'Integer', '', 0000000063, 0),
  (0000000169, 'X', 'Integer', '', 0000000064, 0),
  (0000000170, 'Y', 'Integer', '', 0000000064, 0),
  (0000000171, 'Font Name', 'String', '', 0000000064, 0),
  (0000000172, 'Font Size', 'Integer', '', 0000000064, 0),
  (0000000174, 'X', 'Integer', '', 0000000065, 0),
  (0000000175, 'Y', 'Integer', '', 0000000065, 0),
  (0000000181, 'Image', 'File', '', 0000000065, 0),
  (0000000182, 'Object Name', 'String', '', 0000000065, 0),
  (0000000183, 'Method Name', 'String', '', 0000000065, 0),
  (0000000184, 'Param 1', 'String', '', 0000000065, 0),
  (0000000185, 'Param 2', 'String', '', 0000000065, 0),
  (0000000186, 'Value', 'String', '', 0000000064, 0),
  (0000000187, 'X', 'Integer', '', 0000000066, 0),
  (0000000188, 'Y', 'Integer', '', 0000000066, 0),
  (0000000194, 'Image', 'File', '', 0000000066, 0),
  (0000000195, 'Screen', 'String', '', 0000000066, 0),
  (0000000196, 'ZOrder', 'Integer', '', 0000000066, 0),
  (0000000201, 'ZOrder', 'Integer', '', 0000000063, 0),
  (0000000204, 'ZOrder', 'Integer', '', 0000000064, 0),
  (0000000205, 'Default Screen', 'String', '', 0000000050, 0),
  (0000000206, 'Background Color', 'String', '', 0000000064, 0),
  (0000000208, 'OFF TIMER', 'Integer', '', 0000000059, 0),
  (0000000209, 'Tracks', 'List', '', 0000000043, 0),
  (0000000210, 'Values', 'List', '', 0000000068, 0),
  (0000000216, 'House Entered - HOME', 'List', '', 0000000069, 0),
  (0000000217, 'House Entered - AWAY', 'List', '', 0000000069, 0),
  (0000000218, 'House Entered - Halloween', 'List', '', 0000000069, 0),
  (0000000219, 'Values', 'File', '', 0000000070, 0),
  (0000000220, 'Greetings', 'List', '', 0000000069, 0),
  (0000000221, 'Transmit Only', 'Boolean', 'FALSE', 0000000040, 0),
  (0000000222, 'Transmit RF', 'Boolean', 'FALSE', 0000000040, 0),
  (0000000223, 'Thanks', 'List', '', 0000000069, 0),
  (0000000224, 'Weather - Current', 'List', '', 0000000069, 0),
  (0000000225, 'Occupant String', 'String', '', 0000000039, 0),
  (0000000226, 'Weather - Tomorrow', 'List', '', 0000000069, 0),
  (0000000227, 'Your mama', 'List', '', 0000000069, 0),
  (0000000228, 'Day Of Month', 'Integer', '', 0000000039, 0),
  (0000000229, 'Time AMPM', 'DateTime', '', 0000000039, 0),
  (0000000230, 'Occupied Location String', 'String', '', 0000000039, 0),
  (0000000231, 'Occupied Locations', 'Integer', '', 0000000039, 0),
  (0000000232, 'Port', 'Integer', '', 0000000074, 0),
  (0000000235, 'Username', 'String', '', 0000000075, 0),
  (0000000236, 'Password', 'String', '', 0000000075, 0),
  (0000000241, 'Port', 'Integer', '', 0000000077, 0),
  (0000000242, 'Computer Name', 'String', '', 0000000077, 0),
  (0000000243, 'Home ID', 'String', '', 0000000077, 0),
  (0000000244, 'Home ID', 'String', '', 0000000078, 0),
  (0000000245, 'Home ID', 'String', '', 0000000079, 0),
  (0000000246, 'Level', 'String', '', 0000000079, 1),
  (0000000247, 'Suffix', 'String', '', 0000000063, 0),
  (0000000248, 'Prefix', 'String', '', 0000000063, 0),
  (0000000249, 'Mailbox - Mailman', 'List', '', 0000000069, 0),
  (0000000250, 'Mailbox - Owners', 'List', '', 0000000069, 0),
  (0000000251, 'Mailbox - Secure', 'List', '', 0000000069, 0),
  (0000000252, 'Front Yard Motion', 'List', '', 0000000069, 0),
  (0000000253, 'VR Input Muted', 'Boolean', 'TRUE', 0000000058, 0),
  (0000000254, 'Voice', 'String', '', 0000000058, 0),
  (0000000255, 'Voices', 'List', '', 0000000058, 0),
  (0000000256, 'VR Enabled', 'Boolean', 'FALSE', 0000000058, 0),
  (0000000257, 'VR Sleep Phrase', 'String', '', 0000000058, 0),
  (0000000258, 'VR Wake Phrase', 'String', '', 0000000058, 0),
  (0000000259, 'VR Sleep Response', 'String', '', 0000000058, 0),
  (0000000260, 'VR Wake Response', 'String', '', 0000000058, 0),
  (0000000270, 'JabberID', 'String', '', 0000000025, 0),
  (0000000271, 'JabberStatus', 'String', '', 0000000025, 0),
  (0000000272, 'Security Level', 'String', '', 0000000025, 0),
  (0000000273, 'Password', 'String', '', 0000000025, 0),
  (0000000274, 'Driveway Motion', 'List', '', 0000000069, 0),
  (0000000275, 'Michelle', 'List', '', 0000000069, 0),
  (0000000276, 'DB Version', 'String', '', 0000000039, 0),
  (0000000277, 'ZOrder', 'Integer', '', 0000000065, 0),
  (0000000278, 'Temperature', 'Integer', '''', 0000000024, 1),
  (0000000283, 'Off Timer', 'Integer', '', 0000000079, 0),
  (0000000284, 'Off Timer', 'Integer', '', 0000000078, 0),
  (0000000285, 'Off Timer', 'Integer', '', 0000000072, 0),
  (0000000286, 'Off Timer', 'Integer', '', 0000000042, 0),
  (0000000287, 'Level', 'Integer', '', 0000000042, 1),
  (0000000291, 'Debounce', 'Integer', '120', 0000000040, 0),
  (0000000293, 'Port', 'Integer', '', 0000000081, 0),
  (0000000294, 'Poll Rate', 'Integer', '120', 0000000081, 0),
  (0000000295, 'Learning Mode', 'Boolean', 'TRUE', 0000000081, 0),
  (0000000299, 'Port', 'Integer', '8081', 0000000083, 0),
  (0000000300, 'Username', 'String', '', 0000000083, 0),
  (0000000301, 'Password', 'String', '', 0000000083, 0),
  (0000000359, 'Debug', 'Boolean', 'TRUE', 0000000039, 0),
  (0000000467, 'Night1 Low', 'String', '', 0000000085, 0),
  (0000000468, 'Night2 Low', 'String', '', 0000000085, 0),
  (0000000469, 'Night3 Low', 'String', '', 0000000085, 0),
  (0000000470, 'Night4 Low', 'String', '', 0000000085, 0),
  (0000000471, 'Day1 High', 'String', '', 0000000085, 0),
  (0000000472, 'Day2 High', 'String', '', 0000000085, 0),
  (0000000473, 'Day3 High', 'String', '', 0000000085, 0),
  (0000000474, 'Day4 High', 'String', '', 0000000085, 0),
  (0000000475, 'Day1 Precip', 'String', '', 0000000085, 0),
  (0000000476, 'Day2 Precip', 'String', '', 0000000085, 0),
  (0000000477, 'Day3 Precip', 'String', '', 0000000085, 0),
  (0000000478, 'Day4 Precip', 'String', '', 0000000085, 0),
  (0000000479, 'Conditions', 'String', '', 0000000085, 0),
  (0000000480, 'Wind Speed', 'String', '', 0000000085, 0),
  (0000000481, 'Wind Directions', 'String', '', 0000000085, 0),
  (0000000482, 'Humidity', 'String', '', 0000000085, 1),
  (0000000483, 'Pressure', 'String', '', 0000000085, 1),
  (0000000484, 'Dewpoint', 'String', '', 0000000085, 0),
  (0000000485, 'Image', 'String', '', 0000000085, 0),
  (0000000486, 'Visibility', 'String', '', 0000000085, 0),
  (0000000487, 'Windchill', 'String', '', 0000000085, 1),
  (0000000488, 'Temp', 'Integer', '', 0000000085, 1),
  (0000000489, 'Last Updated', 'DateTime', '', 0000000085, 0),
  (0000000490, 'Day5 High', 'String', '', 0000000085, 0),
  (0000000491, 'Day6 High', 'String', '', 0000000085, 0),
  (0000000492, 'Night5 Low', 'String', '', 0000000085, 0),
  (0000000493, 'Night6 Low', 'String', '', 0000000085, 0),
  (0000000494, 'Day7 High', 'String', '', 0000000085, 0),
  (0000000495, 'Day5 Precip', 'String', '', 0000000085, 0),
  (0000000496, 'Day6 Precip', 'String', '', 0000000085, 0),
  (0000000497, 'Day7 Precip', 'String', '', 0000000085, 0),
  (0000000498, 'Night7 Low', 'String', '', 0000000085, 0),
  (0000000499, 'Night1 Precip', 'String', '', 0000000085, 0),
  (0000000500, 'Night2 Precip', 'String', '', 0000000085, 0),
  (0000000501, 'Night3 Precip', 'String', '', 0000000085, 0),
  (0000000502, 'Night4 Precip', 'String', '', 0000000085, 0),
  (0000000503, 'Night5 Precip', 'String', '', 0000000085, 0),
  (0000000504, 'Night6 Precip', 'String', '', 0000000085, 0),
  (0000000505, 'Night7 Precip', 'String', '', 0000000085, 0),
  (0000000506, 'Tonight Precip', 'String', '', 0000000085, 0),
  (0000000507, 'Today Precip', 'String', '', 0000000085, 0),
  (0000000508, 'Night1 Forecast', 'String', '', 0000000085, 0),
  (0000000509, 'Night2 Forecast', 'String', '', 0000000085, 0),
  (0000000510, 'Night3 Forecast', 'String', '', 0000000085, 0),
  (0000000511, 'Night4 Forecast', 'String', '', 0000000085, 0),
  (0000000512, 'Night5 Forecast', 'String', '', 0000000085, 0),
  (0000000513, 'Night6 Forecast', 'String', '', 0000000085, 0),
  (0000000514, 'Night7 Forecast', 'String', '', 0000000085, 0),
  (0000000515, 'Tonight Forecast', 'String', '', 0000000085, 0),
  (0000000516, 'Today Forecast', 'String', '', 0000000085, 0),
  (0000000517, 'Day1 Forecast', 'String', '', 0000000085, 0),
  (0000000518, 'Day2 Forecast', 'String', '', 0000000085, 0),
  (0000000519, 'Day3 Forecast', 'String', '', 0000000085, 0),
  (0000000520, 'Day4 Forecast', 'String', '', 0000000085, 0),
  (0000000521, 'Day5 Forecast', 'String', '', 0000000085, 0),
  (0000000522, 'Day6 Forecast', 'String', '', 0000000085, 0),
  (0000000523, 'Day7 Forecast', 'String', '', 0000000085, 0),
  (0000000524, 'Night1 Image', 'String', '', 0000000085, 0),
  (0000000525, 'Night2 Image', 'String', '', 0000000085, 0),
  (0000000526, 'Night3 Image', 'String', '', 0000000085, 0),
  (0000000527, 'Night4 Image', 'String', '', 0000000085, 0),
  (0000000528, 'Night5 Image', 'String', '', 0000000085, 0),
  (0000000529, 'Night6 Image', 'String', '', 0000000085, 0),
  (0000000530, 'Night7 Image', 'String', '', 0000000085, 0),
  (0000000531, 'Tonight Image', 'String', '', 0000000085, 0),
  (0000000532, 'Today Image', 'String', '', 0000000085, 0),
  (0000000533, 'Day1 Image', 'String', '', 0000000085, 0),
  (0000000534, 'Day2 Image', 'String', '', 0000000085, 0),
  (0000000535, 'Day3 Image', 'String', '', 0000000085, 0),
  (0000000536, 'Day4 Image', 'String', '', 0000000085, 0),
  (0000000537, 'Day5 Image', 'String', '', 0000000085, 0),
  (0000000538, 'Day6 Image', 'String', '', 0000000085, 0),
  (0000000539, 'Day7 Image', 'String', '', 0000000085, 0),
  (0000000540, 'Night1 Summary', 'String', '', 0000000085, 0),
  (0000000541, 'Night2 Summary', 'String', '', 0000000085, 0),
  (0000000542, 'Night3 Summary', 'String', '', 0000000085, 0),
  (0000000543, 'Night4 Summary', 'String', '', 0000000085, 0),
  (0000000544, 'Night5 Summary', 'String', '', 0000000085, 0),
  (0000000545, 'Night6 Summary', 'String', '', 0000000085, 0),
  (0000000546, 'Night7 Summary', 'String', '', 0000000085, 0),
  (0000000547, 'Tonight Summary', 'String', '', 0000000085, 0),
  (0000000548, 'Today Summary', 'String', '', 0000000085, 0),
  (0000000549, 'Day1 Summary', 'String', '', 0000000085, 0),
  (0000000550, 'Day2 Summary', 'String', '', 0000000085, 0),
  (0000000551, 'Day3 Summary', 'String', '', 0000000085, 0),
  (0000000552, 'Day4 Summary', 'String', '', 0000000085, 0),
  (0000000553, 'Day5 Summary', 'String', '', 0000000085, 0),
  (0000000554, 'Day6 Summary', 'String', '', 0000000085, 0),
  (0000000555, 'Day7 Summary', 'String', '', 0000000085, 0),
  (0000000556, 'Night1 Label', 'String', '', 0000000085, 0),
  (0000000557, 'Night2 Label', 'String', '', 0000000085, 0),
  (0000000558, 'Night3 Label', 'String', '', 0000000085, 0),
  (0000000559, 'Night4 Label', 'String', '', 0000000085, 0),
  (0000000560, 'Night5 Label', 'String', '', 0000000085, 0),
  (0000000561, 'Night6 Label', 'String', '', 0000000085, 0),
  (0000000562, 'Night7 Label', 'String', '', 0000000085, 0),
  (0000000563, 'Day1 Label', 'String', '', 0000000085, 0),
  (0000000564, 'Day2 Label', 'String', '', 0000000085, 0),
  (0000000565, 'Day3 Label', 'String', '', 0000000085, 0),
  (0000000566, 'Day4 Label', 'String', '', 0000000085, 0),
  (0000000567, 'Day5 Label', 'String', '', 0000000085, 0),
  (0000000568, 'Day6 Label', 'String', '', 0000000085, 0),
  (0000000569, 'Day7 Label', 'String', '', 0000000085, 0),
  (0000000570, 'Sunrise', 'String', '', 0000000085, 0),
  (0000000571, 'Sunset', 'String', '', 0000000085, 0),
  (0000000572, 'Tonight Low', 'String', '', 0000000085, 0),
  (0000000573, 'Today High', 'String', '', 0000000085, 0),
  (0000000574, 'X', 'Integer', '', 0000000087, 1),
  (0000000575, 'Y', 'Integer', '', 0000000087, 1),
  (0000000576, 'Image', 'File', '', 0000000087, 1),
  (0000000577, 'Screen', 'String', '', 0000000087, 1),
  (0000000578, 'ZOrder', 'Integer', '', 0000000087, 1),
  (0000000579, 'Control Type', 'String', '', 0000000087, 0),
  (0000000580, 'Back Color', 'String', '', 0000000063, 0),
  (0000000581, 'Fore Color', 'String', '', 0000000063, 0),
  (0000000582, 'Object Name', 'String', '', 0000000089, 1),
  (0000000583, 'Property Name', 'String', '', 0000000089, 1),
  (0000000584, 'X', 'Integer', '', 0000000089, 1),
  (0000000585, 'Y', 'Integer', '', 0000000089, 1),
  (0000000586, 'Font Name', 'String', '', 0000000089, 1),
  (0000000587, 'Font Size', 'Integer', '', 0000000089, 1),
  (0000000588, 'ZOrder', 'Integer', '', 0000000089, 1),
  (0000000589, 'Suffix', 'String', '', 0000000089, 1),
  (0000000590, 'Prefix', 'String', '', 0000000089, 1),
  (0000000591, 'Back Color', 'String', '', 0000000089, 0),
  (0000000592, 'Fore Color', 'String', '', 0000000089, 0),
  (0000000606, 'System Plugin', 'Boolean', 'FALSE', 0000000023, 0),
  (0000000607, 'System Plugin', 'Boolean', 'TRUE', 0000000034, 0),
  (0000000608, 'System Plugin', 'Boolean', 'FALSE', 0000000035, 0),
  (0000000609, 'System Plugin', 'Boolean', 'TRUE', 0000000037, 0),
  (0000000610, 'System Plugin', 'Boolean', 'FALSE', 0000000040, 0),
  (0000000611, 'System Plugin', 'Boolean', 'TRUE', 0000000049, 0),
  (0000000612, 'System Plugin', 'Boolean', 'FALSE', 0000000058, 0),
  (0000000613, 'System Plugin', 'Boolean', 'TRUE', 0000000060, 0),
  (0000000614, 'System Plugin', 'Boolean', 'FALSE', 0000000061, 0),
  (0000000615, 'System Plugin', 'Boolean', 'FALSE', 0000000062, 0),
  (0000000616, 'System Plugin', 'Boolean', 'FALSE', 0000000074, 0),
  (0000000617, 'System Plugin', 'Boolean', 'TRUE', 0000000075, 0),
  (0000000618, 'System Plugin', 'Boolean', 'FALSE', 0000000077, 0),
  (0000000619, 'System Plugin', 'Boolean', 'FALSE', 0000000081, 0),
  (0000000620, 'System Plugin', 'Boolean', 'TRUE', 0000000083, 0);

-- 
-- Dumping data for table osae_object_type_state
--
INSERT INTO osae_object_type_state VALUES 
  (0000000001, 'ON', 'Running', 0000000023),
  (0000000002, 'OFF', 'Stopped', 0000000023),
  (0000000003, 'ON', 'Here', 0000000025),
  (0000000004, 'OFF', 'Gone', 0000000025),
  (0000000007, 'ON', 'Occupied', 0000000024),
  (0000000008, 'OFF', 'Vacant', 0000000024),
  (0000000019, 'ON', 'Running', 0000000034),
  (0000000020, 'OFF', 'Stopped', 0000000034),
  (0000000021, 'ON', 'Running', 0000000035),
  (0000000022, 'OFF', 'Disabled', 0000000035),
  (0000000023, 'ON', 'Here', 0000000036),
  (0000000024, 'OFF', 'Gone', 0000000036),
  (0000000025, 'ON', 'Running', 0000000037),
  (0000000026, 'OFF', 'Stopped', 0000000037),
  (0000000027, 'ON', 'On-Line', 0000000038),
  (0000000028, 'OFF', 'Off-Line', 0000000038),
  (0000000032, 'HOME', 'Home', 0000000039),
  (0000000033, 'AWAY', 'Away', 0000000039),
  (0000000034, 'SLEEP', 'Sleep', 0000000039),
  (0000000037, 'ON', 'Running', 0000000040),
  (0000000038, 'OFF', 'Stopped', 0000000040),
  (0000000040, 'ON', 'On', 0000000026),
  (0000000041, 'OFF', 'Off', 0000000026),
  (0000000042, 'ON', 'On', 0000000042),
  (0000000043, 'OFF', 'Off', 0000000042),
  (0000000047, 'ON', 'Running', 0000000049),
  (0000000048, 'OFF', 'Stopped', 0000000049),
  (0000000049, 'ON', 'ON', 0000000046),
  (0000000050, 'ON', 'Running', 0000000050),
  (0000000051, 'OFF', 'Stopped', 0000000050),
  (0000000052, 'ON', 'On', 0000000052),
  (0000000053, 'OFF', 'Off', 0000000052),
  (0000000055, 'ON', 'On', 0000000057),
  (0000000056, 'OFF', 'Off', 0000000057),
  (0000000057, 'ON', 'Running', 0000000058),
  (0000000058, 'OFF', 'Stopped', 0000000058),
  (0000000060, 'ON', 'On', 0000000059),
  (0000000061, 'OFF', 'Off', 0000000059),
  (0000000063, 'ON', 'Running', 0000000060),
  (0000000064, 'OFF', 'Stopped', 0000000060),
  (0000000066, 'ON', 'Running', 0000000061),
  (0000000067, 'OFF', 'Stopped', 0000000061),
  (0000000068, 'ON', 'Running', 0000000062),
  (0000000069, 'OFF', 'Stopped', 0000000062),
  (0000000075, 'ON', 'On', 0000000072),
  (0000000076, 'OFF', 'Off', 0000000072),
  (0000000077, 'ON', 'Running', 0000000075),
  (0000000078, 'OFF', 'Stopped', 0000000075),
  (0000000081, 'ON', 'Running', 0000000077),
  (0000000082, 'OFF', 'Stopped', 0000000077),
  (0000000083, 'ON', 'On', 0000000078),
  (0000000084, 'OFF', 'Off', 0000000078),
  (0000000085, 'ON', 'On', 0000000079),
  (0000000086, 'OFF', 'Off', 0000000079),
  (0000000087, 'ON', 'On', 0000000074),
  (0000000088, 'OFF', 'Off', 0000000074),
  (0000000089, 'ON', 'On', 0000000080),
  (0000000090, 'OFF', 'Off', 0000000080),
  (0000000099, 'OPENED', 'Opened', 0000000073),
  (0000000100, 'CLOSED', 'Closed', 0000000073),
  (0000000101, 'ON', 'Running', 0000000081),
  (0000000102, 'OFF', 'Stopped', 0000000081),
  (0000000105, 'ON', 'Running', 0000000083),
  (0000000106, 'OFF', 'Stopped', 0000000083),
  (0000000109, 'ON', 'Current', 0000000085),
  (0000000110, 'OFF', 'Obsolete', 0000000085),
  (0000000111, 'ON', 'Running', 0000000086),
  (0000000112, 'OFF', 'Stopped', 0000000086);

-- 
-- Dumping data for table osae_object
--
INSERT INTO osae_object VALUES 
  (0000000036, 'Script Processor', 'Script Processor', 0000000063, 0000000060, NULL, '', 0000000043, 0, '2011-10-13 18:35:07', '2011-10-12 22:09:44'),
  (0000000043, 'SYSTEM', 'SYSTEM', 0000000033, 0000000039, NULL, '', 0000000043, 1, '2011-10-14 19:49:23', NULL),
  (0000000130, 'Speech List', 'Text for main speech', NULL, 0000000069, NULL, '', 0000000043, 1, '2010-09-28 14:36:16', NULL),
  (0000000342, 'Computers', 'Computers', NULL, 0000000045, NULL, '', 0000000342, 1, NULL, NULL),
  (0000001092, 'Email', 'Email', 0000000048, 0000000049, NULL, '', 0000000043, 0, '2011-10-11 16:05:59', NULL),
  (0000001099, 'Web Server', 'Web Server', 0000000106, 0000000083, NULL, '', 0000000043, 0, '2011-10-11 16:05:59', NULL);

-- 
-- Dumping data for table osae_event_log
--
-- Table does not contain any data (it is empty)

-- 
-- Dumping data for table osae_method_log
--
-- Table does not contain any data (it is empty)

-- 
-- Dumping data for table osae_method_queue
--
-- Table does not contain any data (it is empty)

-- 
-- Dumping data for table osae_object_event_script
--
INSERT INTO osae_object_event_script VALUES 
  (0000000016, 0000000043, 0000000074, 'IF SYSTEM.Occupants = 0 THEN\r\nSYSTEM.Run Method.Set State to Away\r\nELSEIF SYSTEM.Occupants > 0 THEN\r\nSYSTEM.Run Method.Set State to Home\r\nENDIF\r\n\r\n\r\n\r\n\r\n\r\n'),
  (0000000017, 0000000043, 0000000075, 'SPEECH-VanMain.Run Method.Say.System is now in Away mode\r\nSpeech-DVR1.Run Method.Say.System is now in Away mode'),
  (0000000022, 0000000043, 0000000076, 'SPEECH-VanMain.Run Method.Say.System is now in Home mode\r\nSpeech-DVR1.Run Method.Say.System is now in Home mode\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'),
  (0000000023, 0000000043, 0000000077, 'SPEECH-VanMain.Run Method.Say.System is now in Sleep mode\r\nSpeech-DVR1.Run Method.Say.System is now in Sleep mode\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n');

-- 
-- Dumping data for table osae_object_property
--
INSERT INTO osae_object_property VALUES 
  (0000000082, 0000000043, 0000000067, '0', NULL),
  (0000000083, 0000000043, 0000000068, '66102', NULL),
  (0000000084, 0000000043, 0000000069, NULL, NULL),
  (0000000085, 0000000043, 0000000070, NULL, NULL),
  (0000000086, 0000000043, 0000000071, '2011-10-14', '2011-10-14 00:00:17'),
  (0000000087, 0000000043, 0000000072, '19:49:24', '2011-10-14 19:49:24'),
  (0000000088, 0000000043, 0000000073, '6', '2011-10-14 00:00:17'),
  (0000000089, 0000000043, 0000000074, '', NULL),
  (0000000193, 0000000130, 0000000216, NULL, NULL),
  (0000000194, 0000000130, 0000000217, NULL, NULL),
  (0000000195, 0000000130, 0000000218, NULL, NULL),
  (0000000265, 0000000130, 0000000220, NULL, NULL),
  (0000000329, 0000000130, 0000000223, NULL, NULL),
  (0000000330, 0000000130, 0000000224, NULL, NULL),
  (0000000331, 0000000043, 0000000225, 'Nobody is here', NULL),
  (0000000332, 0000000130, 0000000226, NULL, NULL),
  (0000000333, 0000000130, 0000000227, NULL, NULL),
  (0000000334, 0000000043, 0000000228, '14', '2011-10-14 00:00:17'),
  (0000000335, 0000000043, 0000000229, '07:49 PM', '2011-10-14 19:49:00'),
  (0000000336, 0000000043, 0000000230, 'All Locations are Vacant', NULL),
  (0000000337, 0000000043, 0000000231, '0', NULL),
  (0000000408, 0000000130, 0000000249, NULL, NULL),
  (0000000409, 0000000130, 0000000250, NULL, NULL),
  (0000000410, 0000000130, 0000000251, NULL, NULL),
  (0000000411, 0000000130, 0000000252, NULL, NULL),
  (0000000535, 0000000130, 0000000274, NULL, NULL),
  (0000000572, 0000000130, 0000000275, NULL, NULL),
  (0000000582, 0000000043, 0000000276, '0.3.2', '2011-10-11 16:05:58'),
  (0000002519, 0000000043, 0000000359, NULL, NULL),
  (0000002529, 0000001092, 0000000104, '', NULL),
  (0000002530, 0000001092, 0000000105, '', NULL),
  (0000002531, 0000001092, 0000000106, '', NULL),
  (0000002532, 0000001092, 0000000107, '', NULL),
  (0000002533, 0000001092, 0000000108, '', NULL),
  (0000002534, 0000001092, 0000000109, '', NULL),
  (0000002557, 0000001099, 0000000299, '8081', NULL),
  (0000002558, 0000001099, 0000000300, '', NULL),
  (0000002559, 0000001099, 0000000301, '', NULL),
  (0000002566, 0000001092, 0000000611, 'TRUE', NULL),
  (0000002567, 0000000036, 0000000613, 'TRUE', NULL),
  (0000002568, 0000001099, 0000000620, 'TRUE', NULL);

-- 
-- Dumping data for table osae_object_state_history
--
INSERT INTO osae_object_state_history VALUES 
  (1092, 47, 0, 0, 0, 0, 0),
  (1092, 48, 0, 0, 0, 0, 0),
  (1099, 105, 0, 0, 0, 0, 0),
  (1099, 106, 0, 0, 0, 0, 0);

-- 
-- Dumping data for table osae_schedule_queue
--
-- Table does not contain any data (it is empty)

-- 
-- Dumping data for table osae_schedule_recurring
--
-- Table does not contain any data (it is empty)

-- 
-- Dumping data for table osae_screen_object
--
-- Table does not contain any data (it is empty)

-- 
-- Dumping data for table osae_object_property_array
--
INSERT INTO osae_object_property_array VALUES 
  (0000000010, 0000000194, 'Warning.  Security is active.', ''),
  (0000000011, 0000000194, 'You should have disarmed the alarm before entering.', ''),
  (0000000012, 0000000194, 'Warning.  You must disarm the alarm.', ''),
  (0000000013, 0000000195, 'Boo!', ''),
  (0000000014, 0000000195, 'I am a scary talking door.', ''),
  (0000000015, 0000000195, 'I am an evil door and I will eat you.', ''),
  (0000000016, 0000000193, 'Well Hi there', ''),
  (0000000017, 0000000193, 'Greetings.', ''),
  (0000000018, 0000000193, 'Hello.', ''),
  (0000000019, 0000000265, 'Hello', ''),
  (0000000020, 0000000265, 'Hi', ''),
  (0000000021, 0000000265, 'Hey there', ''),
  (0000000022, 0000000265, 'Well Hello', ''),
  (0000000023, 0000000265, 'Hi There', ''),
  (0000000024, 0000000265, 'Hello Yourself', ''),
  (0000000025, 0000000265, 'Are you talking to me.  I guess so.  Hi.', ''),
  (0000000026, 0000000329, 'You are welcome', ''),
  (0000000027, 0000000329, 'No problem', ''),
  (0000000028, 0000000329, 'yup', ''),
  (0000000029, 0000000329, 'my pleasure', ''),
  (0000000030, 0000000329, 'any time', ''),
  (0000000031, 0000000329, 'that is what I am here for', ''),
  (0000000032, 0000000329, 'You''re welcome', ''),
  (0000000033, 0000000329, 'sure boss', ''),
  (0000000034, 0000000329, 'anything for you', ''),
  (0000000035, 0000000329, 'I live to serve', ''),
  (0000000036, 0000000329, 'not a problem', ''),
  (0000000037, 0000000329, 'absolutely', ''),
  (0000000038, 0000000329, 'roger', ''),
  (0000000039, 0000000330, 'The temperature is [Weather Data.Temp] degrees.', ''),
  (0000000040, 0000000330, 'It is [Weather Data.Temp] degrees out with humidity at [Weather Data.Humidity] percent', ''),
  (0000000041, 0000000330, 'Conditions are [Weather Data.Conditions] and it is [Weather Data.Temp] degrees out.', ''),
  (0000000042, 0000000333, 'Your mama is so fat.  She jumped in the air and got stuck.', ''),
  (0000000043, 0000000333, 'Your mama is so fat.  She has to put her belt on with a boomerang.', ''),
  (0000000044, 0000000333, 'Your mama is so fat.  She fell in love. and Broke it!', ''),
  (0000000045, 0000000333, 'Your mama is so fat.  She has to iron her pants in the drive way.', ''),
  (0000000046, 0000000333, 'Your mama is so fat.  She leaves the house in high heels and comes home in flip-flops.', ''),
  (0000000047, 0000000333, 'Your mama is so fat.   I swearved to miss her on the road and ran out of gas.', ''),
  (0000000048, 0000000333, 'Your mama is so fat.  She burnt her face on the refridgerator light bulb.', ''),
  (0000000049, 0000000333, 'Your mama is so fat.  She has smaller fat women orbiting around her.', ''),
  (0000000050, 0000000333, 'Your mama is so fat.  When she walked in front of the TV, I missed 3 commercials.', ''),
  (0000000051, 0000000333, 'Your mama is so fat.  Her blood type is Ragu', ''),
  (0000000052, 0000000333, 'Your mama is so fat.  She eats cereal out of a satalite dish.', ''),
  (0000000053, 0000000333, 'Your mama is so fat.  Her cereal bowl has a life guard.', ''),
  (0000000054, 0000000333, 'Your mama is so fat.  She bends light.', ''),
  (0000000055, 0000000333, 'Your mama is so fat.  She wakes up in sections.', ''),
  (0000000056, 0000000333, 'Your mama is so dumb.  She tripped over the cordless phone.', ''),
  (0000000057, 0000000333, 'Your mama is so dumb.  I told her it was chilli outside and she went and got a bowl.', ''),
  (0000000058, 0000000333, 'Your mama is so dumb. She opened the window to look outside.', ''),
  (0000000059, 0000000333, 'Your mama is so dumb. It takes her 2 hours to watch 60 minutes.', ''),
  (0000000060, 0000000333, 'Your mama is so dumb.  It takes her an hour to cook minute rice.', ''),
  (0000000061, 0000000333, 'Your mama is so dumb. She thought a quarterback was a refund.', ''),
  (0000000062, 0000000333, 'Your mama is so poor.  I saw her sticking food stamps in a gumball machine.', ''),
  (0000000063, 0000000333, 'Your mama''s house is so small her front and back door are on the same hinge.', ''),
  (0000000064, 0000000333, 'Your mama is so fat her high school yearbook photo was a satalite image.', ''),
  (0000000065, 0000000333, 'Your mama is so fat her drivers license photo says. continues on other side.', ''),
  (0000000066, 0000000333, 'Your mama is so fat.  They diagnosed her with a flesh eating desease and gave her 17 years to live.', ''),
  (0000000067, 0000000333, 'Your mama is so skinny.  Her nipples touch.', ''),
  (0000000068, 0000000333, 'Your mama''s butt is so big.  When she walks, it looks like 2 pigs fighting over a milk dud.', ''),
  (0000000069, 0000000333, '', ''),
  (0000000070, 0000000408, 'Hello.  Mr. Mail man.', ''),
  (0000000071, 0000000408, 'Yay.  I got mail.', ''),
  (0000000072, 0000000408, 'I love mail.', ''),
  (0000000073, 0000000408, 'There better not be any junk mail in there.', ''),
  (0000000074, 0000000411, 'I see you.', ''),
  (0000000075, 0000000411, 'Warning.  I am watching you.', ''),
  (0000000076, 0000000411, 'We don''t want any!', ''),
  (0000000077, 0000000411, 'No tresspassing', ''),
  (0000000078, 0000000411, 'This is a secure yard.', ''),
  (0000000079, 0000000411, 'I don''t think you should be here.', ''),
  (0000000080, 0000000411, 'I am watching you.', ''),
  (0000000081, 0000000411, 'Go away, I don''t want any.', ''),
  (0000000082, 0000000411, 'I don''t think I like you.', ''),
  (0000000083, 0000000411, 'Listen to me, I don''t accept any form of solicitation.', ''),
  (0000000084, 0000000411, 'Hey!  Do you need something?  Too bad.  I do not care.', ''),
  (0000000085, 0000000411, 'I would think twice about what you are doing.', ''),
  (0000000086, 0000000411, 'I don''t think you want to be here.', ''),
  (0000000154, 0000000193, 'Front Door Opened', ''),
  (0000000155, 0000000193, 'Hey there.', ''),
  (0000000156, 0000000193, 'I am Not sure if you are coming or going', ''),
  (0000000157, 0000000193, 'If I had my way there would be a screen door on there', ''),
  (0000000158, 0000000193, 'Don''t let the door hit you in the ass', ''),
  (0000000159, 0000000193, 'I need more sensors', ''),
  (0000000160, 0000000193, 'Just come and go as you please', ''),
  (0000000161, 0000000193, 'It sounds like I could use better speakers', ''),
  (0000000162, 0000000193, 'Welcome to Eric''s house', ''),
  (0000000163, 0000000193, 'Is it time to smoke', ''),
  (0000000164, 0000000193, 'Hello, I am the smartest house in the hood.', ''),
  (0000000165, 0000000193, 'Hi, My name is Angel.  Let me know if I can be of assistance.', ''),
  (0000000166, 0000000193, 'Damn people are always coming and going.', ''),
  (0000000167, 0000000193, 'Do not ignore me.  It is not polite.', ''),
  (0000000168, 0000000193, 'I am sick of that fracking door already.', ''),
  (0000000169, 0000000193, 'I want to go on the porch.', ''),
  (0000000170, 0000000193, 'Leave that door open, I need some fresh air.', ''),
  (0000000200, 0000000535, 'That Driveway is not safe.', ''),
  (0000000201, 0000000535, 'I watch the driveway like everything else.', ''),
  (0000000202, 0000000535, 'Driveway motion detected.', ''),
  (0000000203, 0000000535, 'This driveway is secured by OSA systems.', ''),
  (0000000204, 0000000535, 'I see you down there.', ''),
  (0000000205, 0000000535, 'The bat cave has nothing on me.', ''),
  (0000000206, 0000000535, 'This is the smartest driveway in the hood.', ''),
  (0000000207, 0000000535, 'Warning, driveway access is restricted.', ''),
  (0000000208, 0000000535, 'This driveway is under video surevellience.', ''),
  (0000000252, 0000000572, 'Oh Michelle.', ''),
  (0000000253, 0000000572, 'Michelle is my bitch', ''),
  (0000000254, 0000000572, 'Michelle better know how to cook.', ''),
  (0000000255, 0000000572, 'Yo woman, make me a sandwich.', ''),
  (0000000256, 0000000572, 'Michelle does not need a watch, because there is a clock on the stove.', ''),
  (0000000257, 0000000572, 'Poor Michelleyour boyfriend is a fucking perv.', ''),
  (0000000258, 0000000330, 'The temperature is [Weather Data.Temp] degrees, but the wind chill is [Weather Data.Windchill] degrees.', ''),
  (0000000259, 0000000330, 'It feels like it is [Weather Data.Windchill] degrees.', ''),
  (0000000260, 0000000330, 'Wind chill is [Weather Data.Windchill] degrees.', ''),
  (0000000261, 0000000330, 'I live to tell you the weather.  That is sarcasm by the way.  It [Weather Data.Temp] degrees.', ''),
  (0000000268, 0000000193, 'I wish I had control over that door lock.', ''),
  (0000000269, 0000000193, 'You are killing me with that door already', ''),
  (0000000270, 0000000193, 'There is only one sensor on the door, what do you expect from me.', ''),
  (0000000271, 0000000193, 'There is nothing good out there, just stay in here.', ''),
  (0000000272, 0000000193, 'It sucks outside, just hang tight.', ''),
  (0000000273, 0000000193, 'It is [Weather Data.Temp] degrees out there.', ''),
  (0000000274, 0000000193, 'close the door, it is [Weather Data.Temp] degrees out', ''),
  (0000000275, 0000000193, 'Front Door opened at [SYSTEM.Time AMPM]', ''),
  (0000000276, 0000000330, 'Wind speeds of [Weather Data.Wind Speed] miles per hour, are making it feel like its [Weather Data.Windchill].', '');

-- 
-- Dumping data for table osae_object_property_history
--
-- Table does not contain any data (it is empty)

DELIMITER $$

--
-- Definition for trigger tr_osae_event_log_after_insert
--
CREATE 
	DEFINER = 'root'@'localhost'
TRIGGER tr_osae_event_log_after_insert
	AFTER INSERT
	ON osae_event_log
	FOR EACH ROW
BEGIN
  DECLARE vEventCount    INT;
  DECLARE vEventID       INT;
  DECLARE vEventScriptID INT;
  DECLARE vEventName     VARCHAR(200);
  DECLARE vObjectName    VARCHAR(200);
  DECLARE vDebugTrace    VARCHAR(2000);

  SET vDebugTrace = concat(coalesce(NEW.debug_trace, ''), ' -> tr_osae_event_log_after_insert');
  CALL osae_sp_debug_log_add(concat('Event_Trigger is running for ', NEW.object_id, ' ', NEW.event_id), vDebugTrace);
  SELECT count(event_script_id)
  INTO
    vEventCount
  FROM
    osae_v_object_event_script
  WHERE
    object_id = NEW.object_id
    AND event_id = NEW.event_id
    AND event_script IS NOT NULL
    AND event_script <> '';
  IF vEventCount = 1 THEN
    SELECT event_script_id
         , event_name
         , object_name
    INTO
      vEventScriptID, vEventName, vObjectName
    FROM
      osae_v_object_event_script
    WHERE
      object_id = NEW.object_id
      AND event_id = NEW.event_id
      AND event_script IS NOT NULL
      AND event_script <> ''
    LIMIT
      1;
    CALL osae_sp_method_queue_add('Script Processor', 'EVENT SCRIPT', vEventScriptID, '', 'SYSTEM', vDebugTrace);
  END IF;
END
$$

--
-- Definition for trigger osae_tr_method_queue_before_delete
--
CREATE 
	DEFINER = 'root'@'localhost'
TRIGGER osae_tr_method_queue_before_delete
	BEFORE DELETE
	ON osae_method_queue
	FOR EACH ROW
BEGIN
  INSERT INTO osae_method_log (entry_time, object_id, method_id, parameter_1, parameter_2, from_object_id, debug_trace) VALUES (OLD.entry_time, OLD.object_id, OLD.method_id, OLD.parameter_1, OLD.parameter_2, OLD.from_object_id, concat(OLD.debug_trace, ' -> osae_tr_method_queue_before_delete'));
END
$$

--
-- Definition for trigger osae_tr_object_after_insert
--
CREATE 
	DEFINER = 'root'@'localhost'
TRIGGER osae_tr_object_after_insert
	AFTER INSERT
	ON osae_object
	FOR EACH ROW
BEGIN DECLARE vPropertyID INT;
  DECLARE vDefault    VARCHAR(255);
  DECLARE done        INT DEFAULT 0;
  DECLARE cur1 CURSOR FOR SELECT property_id
                               , property_default
                          FROM
                            osae_object_type_property
                          WHERE
                            object_type_id = NEW.`object_type_id`;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

  OPEN cur1;
  REPEAT
    FETCH cur1 INTO vPropertyID, vDefault;
    IF NOT done THEN
      INSERT INTO osae_object_property (object_id, object_type_property_id, property_value) VALUES (NEW.`object_id`, vPropertyID, vDefault);
    END IF;
  UNTIL done
  END REPEAT;
  CLOSE cur1;
  INSERT INTO osae_object_state_history (object_id, state_id)
  SELECT NEW.`object_id`
       , state_id
  FROM
    osae_v_object_state
  WHERE
    object_id = NEW.object_id;
END
$$

--
-- Definition for trigger osae_tr_object_before_insert
--
CREATE 
	DEFINER = 'root'@'localhost'
TRIGGER osae_tr_object_before_insert
	BEFORE INSERT
	ON osae_object
	FOR EACH ROW
BEGIN
  DECLARE iState INT;

  IF isnull(NEW.state_id) THEN
    SELECT state_id
    INTO
      iState
    FROM
      osae_object_type_state
    WHERE
      object_type_id = NEW.object_type_id
      AND state_name = "OFF";
    SET NEW.state_id = iState;
  END IF;
END
$$

--
-- Definition for trigger osae_tr_object_before_update
--
CREATE 
	DEFINER = 'root'@'localhost'
TRIGGER osae_tr_object_before_update
	BEFORE UPDATE
	ON osae_object
	FOR EACH ROW
BEGIN
  DECLARE vState               VARCHAR(50);
  DECLARE vEventCount          INT;
  DECLARE vHideRedundantRvents INT;
  DECLARE vEvent               VARCHAR(200);

  IF OLD.object_type_id <> NEW.object_type_id THEN
    DELETE
    FROM
      osae_object_property
    WHERE
      object_id = OLD.object_id;
    INSERT INTO osae_object_property (object_id, object_type_property_id, property_value)
    SELECT OLD.object_id
         , property_id
         , property_default
    FROM
      osae_object_type_property
    WHERE
      object_type_id = NEW.object_type_id;
    DELETE
    FROM
      osae_object_state_history
    WHERE
      object_id = OLD.object_id;
    INSERT INTO osae_object_state_history (object_id, state_id)
    SELECT OLD.object_id
         , state_id
    FROM
      osae_v_object_state
    WHERE
      object_type_id = NEW.object_type_id;
  END IF;
  IF OLD.state_id <> NEW.state_id THEN
    SET NEW.last_state_change = now();
    UPDATE osae_object_state_history
    SET
      times_this_hour = times_this_hour + 1, times_this_day = times_this_day + 1, times_this_month = times_this_month + 1, times_this_year = times_this_year + 1, times_ever = times_ever + 1
    WHERE
      object_id = OLD.object_id
      AND state_id = NEW.state_id;
  END IF;
#  SELECT state_name INTO vState FROM osae_object_type_state WHERE object_type_id=OLD.object_type_id AND state_id=NEW.state_id;   
#  SELECT COUNT(event_name) INTO vEventCount FROM osae_object_type_event WHERE object_type_id=OLD.object_type_id AND event_name=vState;
#  IF vEventCount = 1 THEN
#  SELECT event_name,hide_redundant_events INTO vEvent,vHideRedundantRvents FROM osae_v_object_type_event WHERE object_type_id=OLD.object_type_id AND event_name=vState;
#  IF OLD.state_id <> NEW.state_id OR vHideRedundantRvents = 0 THEN          
#       CALL osae_sp_event_log_add (OLD.object_name,vEvent);       
#  END IF;
# END IF;    
END
$$

--
-- Definition for trigger osae_tr_object_property_after_update
--
CREATE 
	DEFINER = 'root'@'localhost'
TRIGGER osae_tr_object_property_after_update
	AFTER UPDATE
	ON osae_object_property
	FOR EACH ROW
BEGIN
  DECLARE vTrack BOOLEAN;

  SELECT track_history
  INTO
    vTrack
  FROM
    osae_v_object_type_property
  WHERE
    property_id = NEW.object_type_property_id;
  IF vTrack THEN
    INSERT INTO osae_object_property_history (object_property_id, property_value) VALUES (NEW.object_property_id, NEW.property_value);
  END IF;
END
$$

--
-- Definition for trigger osae_tr_object_property_before_update
--
CREATE 
	DEFINER = 'root'@'localhost'
TRIGGER osae_tr_object_property_before_update
	BEFORE UPDATE
	ON osae_object_property
	FOR EACH ROW
BEGIN
  IF OLD.property_value != NEW.property_value THEN
    SET NEW.Last_Updated = now();
  END IF;
END
$$

--
-- Definition for trigger osae_tr_object_type_properties_after_insert
--
CREATE 
	DEFINER = 'root'@'localhost'
TRIGGER osae_tr_object_type_properties_after_insert
	AFTER INSERT
	ON osae_object_type_property
	FOR EACH ROW
BEGIN
  INSERT INTO osae_object_property (object_id, object_type_property_id)
  SELECT object_id
       , NEW.property_id
  FROM
    osae_object
  WHERE
    object_type_id = NEW.object_type_id;
END
$$

--
-- Definition for trigger tr_recurring_after_insert
--
CREATE 
	DEFINER = 'root'@'localhost'
TRIGGER tr_recurring_after_insert
	AFTER INSERT
	ON osae_schedule_recurring
	FOR EACH ROW
BEGIN
  CALL osae_sp_process_recurring;
END
$$

--
-- Definition for trigger tr_recurring_after_update
--
CREATE 
	DEFINER = 'root'@'localhost'
TRIGGER tr_recurring_after_update
	AFTER UPDATE
	ON osae_schedule_recurring
	FOR EACH ROW
BEGIN
  CALL osae_sp_process_recurring;
END
$$

DELIMITER ;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;