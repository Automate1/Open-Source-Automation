//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Manager_WPF.WCFServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OSAEWCFMessage", Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    [System.SerializableAttribute()]
    public partial class OSAEWCFMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Manager_WPF.WCFServiceReference.OSAEWCFMessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeSent {
            get {
                return this.TimeSentField;
            }
            set {
                if ((this.TimeSentField.Equals(value) != true)) {
                    this.TimeSentField = value;
                    this.RaisePropertyChanged("TimeSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Manager_WPF.WCFServiceReference.OSAEWCFMessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OSAEWCFMessageType", Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    public enum OSAEWCFMessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PLUGIN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LOG = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CONNECT = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CMDLINE = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        METHOD = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPDATESCREEN = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SERVICE = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFServiceReference.IWCFService", CallbackContract=typeof(Manager_WPF.WCFServiceReference.IWCFServiceCallback))]
    public interface IWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/SendMessageToClients", ReplyAction="http://tempuri.org/IWCFService/SendMessageToClientsResponse")]
        void SendMessageToClients(Manager_WPF.WCFServiceReference.OSAEWCFMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/Subscribe", ReplyAction="http://tempuri.org/IWCFService/SubscribeResponse")]
        bool Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/Unsubscribe", ReplyAction="http://tempuri.org/IWCFService/UnsubscribeResponse")]
        bool Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/messageHost", ReplyAction="http://tempuri.org/IWCFService/messageHostResponse")]
        void messageHost(Manager_WPF.WCFServiceReference.OSAEWCFMessageType msgType, string message, string from);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetAllObjects", ReplyAction="http://tempuri.org/IWCFService/GetAllObjectsResponse")]
        OSAE.OSAEObject[] GetAllObjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetObject", ReplyAction="http://tempuri.org/IWCFService/GetObjectResponse")]
        OSAE.OSAEObject GetObject(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetObjectByAddress", ReplyAction="http://tempuri.org/IWCFService/GetObjectByAddressResponse")]
        OSAE.OSAEObject GetObjectByAddress(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ExecuteMethod", ReplyAction="http://tempuri.org/IWCFService/ExecuteMethodResponse")]
        bool ExecuteMethod(string name, string method, string param1, string param2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddObject", ReplyAction="http://tempuri.org/IWCFService/AddObjectResponse")]
        bool AddObject(string name, string description, string type, string address, string container, string enabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateObject", ReplyAction="http://tempuri.org/IWCFService/UpdateObjectResponse")]
        bool UpdateObject(string oldName, string newName, string description, string type, string address, string container, int enabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteObject", ReplyAction="http://tempuri.org/IWCFService/DeleteObjectResponse")]
        bool DeleteObject(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetObjectsByType", ReplyAction="http://tempuri.org/IWCFService/GetObjectsByTypeResponse")]
        OSAE.OSAEObject[] GetObjectsByType(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetObjectsByBaseType", ReplyAction="http://tempuri.org/IWCFService/GetObjectsByBaseTypeResponse")]
        OSAE.OSAEObject[] GetObjectsByBaseType(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetObjectsByContainer", ReplyAction="http://tempuri.org/IWCFService/GetObjectsByContainerResponse")]
        OSAE.OSAEObject[] GetObjectsByContainer(string container);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetPlugins", ReplyAction="http://tempuri.org/IWCFService/GetPluginsResponse")]
        OSAE.OSAEObject[] GetPlugins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/SendPattern", ReplyAction="http://tempuri.org/IWCFService/SendPatternResponse")]
        bool SendPattern(string pattern);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ExecuteSQL", ReplyAction="http://tempuri.org/IWCFService/ExecuteSQLResponse")]
        System.Data.DataSet ExecuteSQL(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/SetProperty", ReplyAction="http://tempuri.org/IWCFService/SetPropertyResponse")]
        bool SetProperty(string objName, string propName, string propValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/SetState", ReplyAction="http://tempuri.org/IWCFService/SetStateResponse")]
        bool SetState(string objName, string state);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWCFService/OnMessageReceived")]
        void OnMessageReceived(Manager_WPF.WCFServiceReference.OSAEWCFMessage message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFServiceChannel : Manager_WPF.WCFServiceReference.IWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFServiceClient : System.ServiceModel.DuplexClientBase<Manager_WPF.WCFServiceReference.IWCFService>, Manager_WPF.WCFServiceReference.IWCFService {
        
        public WCFServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SendMessageToClients(Manager_WPF.WCFServiceReference.OSAEWCFMessage message) {
            base.Channel.SendMessageToClients(message);
        }
        
        public bool Subscribe() {
            return base.Channel.Subscribe();
        }
        
        public bool Unsubscribe() {
            return base.Channel.Unsubscribe();
        }
        
        public void messageHost(Manager_WPF.WCFServiceReference.OSAEWCFMessageType msgType, string message, string from) {
            base.Channel.messageHost(msgType, message, from);
        }
        
        public OSAE.OSAEObject[] GetAllObjects() {
            return base.Channel.GetAllObjects();
        }
        
        public OSAE.OSAEObject GetObject(string name) {
            return base.Channel.GetObject(name);
        }
        
        public OSAE.OSAEObject GetObjectByAddress(string address) {
            return base.Channel.GetObjectByAddress(address);
        }
        
        public bool ExecuteMethod(string name, string method, string param1, string param2) {
            return base.Channel.ExecuteMethod(name, method, param1, param2);
        }
        
        public bool AddObject(string name, string description, string type, string address, string container, string enabled) {
            return base.Channel.AddObject(name, description, type, address, container, enabled);
        }
        
        public bool UpdateObject(string oldName, string newName, string description, string type, string address, string container, int enabled) {
            return base.Channel.UpdateObject(oldName, newName, description, type, address, container, enabled);
        }
        
        public bool DeleteObject(string name) {
            return base.Channel.DeleteObject(name);
        }
        
        public OSAE.OSAEObject[] GetObjectsByType(string type) {
            return base.Channel.GetObjectsByType(type);
        }
        
        public OSAE.OSAEObject[] GetObjectsByBaseType(string type) {
            return base.Channel.GetObjectsByBaseType(type);
        }
        
        public OSAE.OSAEObject[] GetObjectsByContainer(string container) {
            return base.Channel.GetObjectsByContainer(container);
        }
        
        public OSAE.OSAEObject[] GetPlugins() {
            return base.Channel.GetPlugins();
        }
        
        public bool SendPattern(string pattern) {
            return base.Channel.SendPattern(pattern);
        }
        
        public System.Data.DataSet ExecuteSQL(string sql) {
            return base.Channel.ExecuteSQL(sql);
        }
        
        public bool SetProperty(string objName, string propName, string propValue) {
            return base.Channel.SetProperty(objName, propName, propValue);
        }
        
        public bool SetState(string objName, string state) {
            return base.Channel.SetState(objName, state);
        }
    }
}
